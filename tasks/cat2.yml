---

- name: "MEDIUM | WN10-00-000005 | AUDIT | Domain-joined systems must use Windows 10 Enterprise Edition 64-bit version."
  block:
      - name: "MEDIUM | WN10-00-000005 | AUDIT | Domain-joined systems must use Windows 10 Enterprise Edition 64-bit version. | Warning."
        ansible.builtin.debug:
            msg:
                - "Warning!! You need to be on a 64-bit operating system when joined to a domain."
                - "This is a requirement for STIG compliance"

      - name: "MEDIUM | WN10-00-000005 | AUDIT | Domain-joined systems must use Windows 10 Enterprise Edition 64-bit version. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000005'
  when:
      - wn10_00_000005
      - ansible_windows_domain_member
      - ansible_architecture != "64-bit"
  tags:
      - WN10-00-000005
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220697r857178_rule
      - V-220697

- name: "MEDIUM | WN10-00-000010 | AUDIT | Windows 10 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use."
  block:
      - name: "MEDIUM | WN10-00-000010 | AUDIT | Windows 10 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Get TPM status."
        ansible.windows.win_command: wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get * /format:textvaluelist.xsl
        changed_when: false
        failed_when: false
        register: wn10_00_000010_tpm_status

      - name: "MEDIUM | WN10-00-000010 | AUDIT | Windows 10 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Running Instances Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please confirm TPM status is Ready for use, there are no instances currently running."
        when: "'No Instance' in wn10_00_000010_tpm_status.stderr_lines | string"

      - name: "MEDIUM | WN10-00-000010 | AUDIT | Windows 10 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Full TPM Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please confirm TPM status is Ready for use. Current settings do not meet STIG requirements."
        when:
            - "'No Instance' not in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'IsActivated_InitialValue=TRUE' in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'IsEnabled_InitialValue=TRUE' in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'IsOwned_InitialValue=TRUE' in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'SpecVersion=2.0' or 'SpecVersion=1.2' in wn10_00_000010_tpm_status.stderr_lines | string"

      - name: "MEDIUM | WN10-00-000010 | AUDIT | Windows 10 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000010'
        when:
            - "'No Instance' not in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'IsActivated_InitialValue=TRUE' in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'IsEnabled_InitialValue=TRUE' in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'IsOwned_InitialValue=TRUE' in wn10_00_000010_tpm_status.stderr_lines | string"
            - "'SpecVersion=2.0' or 'SpecVersion=1.2' in wn10_00_000010_tpm_status.stderr_lines | string or
              'No Instance' in wn10_00_000010_tpm_status.stderr_lines | string"
  when:
      - wn10_00_000010
      - ansible_windows_domain_member
  tags:
      - WN10-00-000010
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220698r857181_rule
      - V-220698

- name: "MEDIUM | WN10-00-000015 | AUDIT | Windows 10 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS."
  block:
      - name: "MEDIUM | WN10-00-000015 | AUDIT | Windows 10 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS | Check For UEFI Status."
        ansible.windows.win_shell: $env:firmware_type
        changed_when: false
        failed_when: false
        register: wn10_00_000015_system_firmware_check

      - name: "MEDIUM | WN10-00-000015 | AUDIT | Windows 10 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS | Legacy BIOS Error."
        ansible.builtin.debug:
            msg:
                - "Warning!! Your system firmware is configured to run in Legacy BIOS."
                - "UEFI is the requirement for STIG to be in compliance."
        when: "'UEFI' not in wn10_00_000015_system_firmware_check.stdout_lines | string"

      - name: "MEDIUM | WN10-00-000015 | AUDIT | Windows 10 systems must have Unified Extensible Firmware Interface (UEFI) firmware and be configured to run in UEFI mode, not Legacy BIOS | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000015'
        when: "'UEFI' not in wn10_00_000015_system_firmware_check.stdout_lines | string"
  when:
      - wn10_00_000015
      - not win10stig_system_is_container
      - not win10stig_system_is_vm
  tags:
      - WN10-00-000015
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220699r569187_rule
      - V-220699

- name: "MEDIUM | WN10-00-000025 | AUDIT | Windows 10 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where HBSS is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)"
  block:
      - name: "MEDIUM | WN10-00-000025 | AUDIT | Windows 10 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where HBSS is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Warning."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please install DoD-approved ESS software and ensure it is operating continuously"
                - "Ask site ISSM for documentation fo the ESS software installation and configuration"

      - name: "MEDIUM | WN10-00-000025 | AUDIT | Windows 10 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where HBSS is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP) | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000025'
  when:
      - wn10_00_000025
  tags:
      - WN10-00-000025
      - CAT2
      - CCI-001233
      - SRG-OS-000191-GPOS-00080
      - SV-220701r793197_rule
      - V-220701

- name: "MEDIUM | WN10-00-000030 | AUDIT | Windows 10 information systems must use BitLocker to encrypt all disks to protect the confidentiality and integrity of all information at rest."
  block:
      - name: "MEDIUM | WN10-00-000030 | AUDIT | Windows 10 information systems must use BitLocker to encrypt all disks to protect the confidentiality and integrity of all information at rest."
        ansible.windows.win_shell: get-bitlockervolume -MountPoint "C:" | select ProtectionStatus | format-list
        changed_when: false
        failed_when: false
        register: wn10_00_000030_bitlocker_status

      - name: "MEDIUM | WN10-00-000030 | AUDIT | Windows 10 information systems must use BitLocker to encrypt all disks to protect the confidentiality and integrity of all information at rest."
        ansible.builtin.debug:
            msg:
                - "Warning!! BitLocker is not enabled for the C:\ drive"
                - "Please enable BitLocker for at least the OS drive to conform to STIG Standards"
        when: "'On' not in wn10_00_000030_bitlocker_status.stdout"

      - name: "MEDIUM | WN10-00-000030 | AUDIT | Windows 10 information systems must use BitLocker to encrypt all disks to protect the confidentiality and integrity of all information at rest. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000030'
        when: "'On' not in wn10_00_000030_bitlocker_status.stdout"
  when:
      - wn10_00_000030
  tags:
      - WN10-00-000030
      - CAT2
      - CCI-001199
      - CCI-002475
      - CCI-002476
      - SRG-OS-000185-GPOS-00079
      - SV-220702r859296_rule
      - V-220702

- name: "MEDIUM | WN10-00-000031 | PATCH | Windows 10 systems must use a BitLocker PIN for pre-boot authentication."
  block:
      - name: "MEDIUM | WN10-00-000031 | PATCH | Windows 10 systems must use a BitLocker PIN for pre-boot authentication. | Set Advanced Startup value"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\FVE
            value: UseAdvancedStartup
            state: present
            data: 1
            type: dword

      - name: "MEDIUM | WN10-00-000031 | PATCH | Windows 10 systems must use a BitLocker PIN for pre-boot authentication. | Set BitLocker Pin settings"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\FVE
            value: "{{ win10stig_bitlocker_pin_type }}"
            state: present
            data: "{{ win10stig_bitlocker_tpmpin_registry_value }}"
            type: dword
  when:
      - wn10_00_000031
      - wn10_00_000030
      - "'On' in wn10_00_000030_bitlocker_status.stdout"
  tags:
      - WN10-00-000031
      - CAT2
      - CCI-001199
      - CCI-002475
      - CCI-002476
      - SRG-OS-000185-GPOS-00079
      - SV-220703r859157_rule
      - V-220703

- name: "MEDIUM | WN10-00-000032 | PATCH | Windows 10 systems must use a BitLocker PIN with a minimum length of 6 digits for pre-boot authentication."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\FVE
      value: MinimumPIN
      state: present
      data: "{{ win10stig_bitlocker_min_pin_length }}"
      type: dword
  when:
      - wn10_00_000032
  tags:
      - WN10-00-000032
      - CAT2
      - CCI-001199
      - CCI-002445
      - CCI-002446
      - SRG-OS-000185-GPOS-00079
      - SV-220704r859297_rule
      - V-220704

- name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs."
  block:
      - name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs. | Applocker XML Out."
        ansible.windows.win_shell: Get-AppLockerPolicy -Effective -XML > {{ win10stig_applocker_xml_output }}
        changed_when: false
        failed_when: false
        when:
            - win10stig_applocker
            - win10stig_applocker_output == 1

      - name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs. | Check XML File Warning."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the configuration of Applocker using the XML file located in directory"
                - "{{ win10stig_applocker_xml_output }} to confirm you have a deny-all policy in place that utilizes"
                - "a whitelist for applications. There is an AppLocker white paper from NSA that can be used as a guide"
                - "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm"
        when:
            - win10stig_applocker
            - win10stig_applocker_output == 1

      - name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs. | Check For Applocker To Stdout."
        ansible.windows.win_shell: Get-AppLockerPolicy -Effective -XML
        changed_when: false
        failed_when: false
        register: win10stig_applocker_output
        when:
            - win10stig_applocker
            - win10stig_applocker_output != 1

      - name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs. | Check Stdout Print Out."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the configuration of Applocker to confirm you have a deny-all policy in place that utilizes"
                - "a whitelist for applications. There is an AppLocker white paper from NSA that can be used as a guide"
                - "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm"
                - "{{ win10stig_applocker_output.stdout_lines }}"
        when:
            - win10stig_applocker
            - win10stig_applocker_output != 1

      - name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs. | Warning Message When No Applocker."
        ansible.builtin.debug:
            msg:
                - "Warning!! Applocker is not in use. Please confirm you have a deny-all policy in place that utilizes a whitelist for applications."
                - "This can be done through a utility like AppLocker to limit applications only to authorized applications"
                - "There is an AppLocker white paper from NSA that can be used as a guide"
                - "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm"
        when: not win10stig_applocker

      - name: "MEDIUM | WN10-00-000035 | AUDIT | The operating system must employ a deny-all, permit-by-exception wn10_AU_000085to allow the execution of authorized software programs. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000035'
        when:
            - win10stig_applocker
            - win10stig_applocker_output == 1 or
            - not win10stig_applocker or
            - win10stig_applocker
            - win10stig_applocker_output != 1
  when:
      - wn10_00_000035
  tags:
      - WN10-00-000035
      - CAT2
      - CCI-001774
      - SRG-OS-000370-GPOS-00155
      - SV-220705r569187_rule
      - V-220705

- name: "MEDIUM | WN10-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system."
  block:
      - name: "MEDIUM | WN10-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Warning."
        ansible.builtin.debug:
            msg: "Warning!! Please confirm that no other alternative operating systems exist on this system."

      - name: "MEDIUM | WN10-00-000055 | AUDIT | Alternate operating systems must not be permitted on the same system. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000055'
  when:
      - wn10_00_000055
  tags:
      - WN10-00-000055
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220709r569187_rule
      - V-220709

- name: "MEDIUM | WN10-00-000060 | PATCH | Non system-created file shares on a system must limit access to groups that require it."
  block:
      - name: "MEDIUM | WN10-00-000060 | AUDIT | Non system-created file shares on a system must limit access to groups that require it. | Get Share Names"
        ansible.windows.win_shell: Get-SmbShare | Where-Object { ($_.Name -notlike "ADMIN$") -and ($_.Name -notlike 'C$') -and ($_.Name -notlike 'IPC$') } | Select-Object -Property Name | format-table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn10_00_000060_share_names

      - name: "MEDIUM | WN10-00-000060 | AUDIT | Non system-created file shares on a system must limit access to groups that require it. | Alert Share Names"
        ansible.builtin.debug:
            msg:
                - "Warning!! You have shares that non-system created. Please manually review those shares listed below to make sure appropriate permissions are applied"
                - "{{ wn10_00_000060_share_names.stdout_lines | select() | list }}"
        when: wn10_00_000060_share_names.stdout_lines | select() | length > 0

      - name: "MEDIUM | WN10-00-000060 | AUDIT | Non system-created file shares on a system must limit access to groups that require it. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000060'
        when: wn10_00_000060_share_names.stdout_lines | select() | length > 0
  when:
      - wn10_00_000060
  tags:
      - WN10-00-000060
      - CAT2
      - CCI-001090
      - SRG-OS-000138-GPOS-00069
      - SV-220710r569187_rule
      - V-220710

- name: "MEDIUM | WN10-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group."
  block:
      - name: "MEDIUM | WN10-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group. | Get Backup Operator users"
        ansible.windows.win_shell: get-localgroupmember -Name "Backup Operators" | Select-Object -Property Name | Format-Table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn10_00_000075_bo_members

      - name: "MEDIUM | WN10-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group. | Display Backup Operator users"
        ansible.builtin.debug:
            msg:
                - "Warning!! Below are the users in the Backup Operators group. Please review accounts are appropriate."
                - "{{ wn10_00_000075_bo_members.stdout_lines | select() | list }}"
        when: wn10_00_000075_bo_members.stdout_lines | select() | list | length > 0

      - name: "MEDIUM | WN10-00-000075 | AUDIT | Only accounts responsible for the backup operations must be members of the Backup Operators group. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000075'
        when: wn10_00_000075_bo_members.stdout_lines | select() | list | length > 0
  when:
      - wn10_00_000075
  tags:
      - WN10-00-000075
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220713r569187_rule
      - V-220713

- name: "MEDIUM | WN10-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 10 systems."
  block:
      - name: "MEDIUM | WN10-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 10 systems. | Get Hyper-V group users"
        ansible.windows.win_shell: get-localgroupmember -Name "Hyper-V Administrators" | Select-Object -Property Name | Format-Table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn10_00_000080_hyperv_members

      - name: "MEDIUM | WN10-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 10 systems. | Display Hyper-V group users"
        ansible.builtin.debug:
            msg:
                - "Warning!! Below are the users in the Hyper-V Administrators group, please remove any unnecessary accounts"
                - "{{ wn10_00_000080_hyperv_members.stdout_lines | select() | list }}"
        when: wn10_00_000080_hyperv_members.stdout_lines | select() | list | length > 0

      - name: "MEDIUM | WN10-00-000080 | AUDIT | Only authorized user accounts must be allowed to create or run virtual machines on Windows 10 systems. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000080'
        when: wn10_00_000080_hyperv_members.stdout_lines | select() | list | length > 0
  when:
      - wn10_00_000080
  tags:
      - WN10-00-000080
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220714r569187_rule
      - V-220714

- name: "MEDIUM | WN10-00-000090 | PATCH | Accounts must be configured to require password expiration."
  block:
      - name: "MEDIUM | WN10-00-000090 | AUDIT | Accounts must be configured to require password expiration. | Get list of PW Never Expire users"
        ansible.windows.win_shell: get-localuser | select Name, Enabled, PasswordExpires | Where-Object -Property Enabled -eq True | Where { $_.PasswordExpires -eq $null } | Select-Object -Property Name | Format-Table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn10_00_000090_neverexpire_passwords

      - name: "MEDIUM | WN10-00-000090 | AUDIT | Accounts must be configured to require password expiration. | Display list of PW Never Expire users"
        ansible.builtin.debug:
            msg:
                - "Warning!! You have some accounts that are set to never expire. Please review the below accounts and set an expiration"
                - "{{ wn10_00_000090_neverexpire_passwords.stdout_lines | select() | list }}"
        when:
            - wn10_00_000090_neverexpire_passwords.stdout_lines | select() | list | length > 0
            - not win10stig_disruption_high

      - name: "MEDIUM | WN10-00-000090 | PATCH | Accounts must be configured to require password expiration. | Set PW to Expire for PW Never Expire users"
        ansible.windows.win_user:
            name: "{{ item }}"
            password_never_expires: false
        with_items:
            - "{{ wn10_00_000090_neverexpire_passwords.stdout_lines | select() | list }}"
        when:
            - wn10_00_000090_neverexpire_passwords.stdout_lines | select() | list | length > 0
            - win10stig_disruption_high

      - name: "MEDIUM | WN10-00-000090 | PATCH | Accounts must be configured to require password expiration. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000090'
        when:
            - wn10_00_000090_neverexpire_passwords.stdout_lines | select() | list | length > 0
            - not win10stig_disruption_high
  when:
      - wn10_00_000090
  tags:
      - WN10-00-000090
      - CAT2
      - CCI-000199
      - SRG-OS-000076-GPOS-00044
      - SV-220716r569187_rule
      - V-220716

- name: "MEDIUM | WN10-00-000105 | PATCH | Simple Network Management Protocol (SNMP) must not be installed on the system."
  block:
      - name: "MEDIUM | WN10-00-000105 | AUDIT | Simple Network Management Protocol (SNMP) must not be installed on the system. | Get SNMP State"
        ansible.windows.win_shell: Get-WindowsCapability  -Online -Name "SNMP*" | Select-Object -Property State | Format-Table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn10_00_000105_snmp_state

      - name: "MEDIUM | WN10-00-000105 | PATCH | Simple Network Management Protocol (SNMP) must not be installed on the system. | Remove SNMP"
        ansible.windows.win_shell: remove-WindowsCapability  -Online -Name "SNMP.Client~~~~0.0.1.0"
        notify: reboot windows
        when: "'Installed' in wn10_00_000105_snmp_state.stdout"
  when:
      - wn10_00_000105
  tags:
      - WN10-00-000105
      - CAT2
      - CCI-000382
      - SRG-OS-000096-GPOS-00050
      - SV-220719r569187_rule
      - V-220719

- name: "MEDIUM | WN10-00-000110 | PATCH | Simple TCP/IP Services must not be installed on the system."
  ansible.windows.win_optional_feature:
      name: SimpleTCP
      state: absent
  when:
      - wn10_00_000110
  tags:
      - WN10-00-000110
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220720r569187_rule
      - V-220720

- name: "MEDIUM | WN10-00-000115 | PATCH | The Telnet Client must not be installed on the system."
  ansible.windows.win_optional_feature:
      name: TelnetClient
      state: absent
  when:
      - wn10_00_000115
  tags:
      - WN10-00-000115
      - CAT2
      - CCI-000382
      - SRG-OS-000096-GPOS-00050
      - SV-220721r569187_rule
      - V-220721

- name: "MEDIUM | WN10-00-000120 | PATCH | The TFTP Client must not be installed on the system."
  ansible.windows.win_optional_feature:
      name: TFTP
      state: absent
  when:
      - wn10_00_000120
  tags:
      - WN10-00-000120
      - CAT2
      - CCI-000382
      - SRG-OS-000096-GPOS-00050
      - SV-220722r569187_rule
      - V-220722

- name: "MEDIUM | WN10-00-000130 | PATCH | Software certificate installation files must be removed from Windows 10."
  block:
      - name: "MEDIUM | WN10-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 10. | Get Drive Letters"
        ansible.windows.win_shell: Get-Volume | ?{ $_.DriveType -eq 'Fixed' } | Select-Object -ExpandProperty 'DriveLetter'
        changed_when: false
        failed_when: false
        register: wn10_00_000130_drive_letters

      - name: "MEDIUM | WN10-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 10. | Search for files"
        ansible.windows.win_find:
            paths: '{{ item }}:\'
            recurse: true
            patterns: ['*.p12', '*.pfx']
        register: wn10_00_000130_files
        with_items:
            - "{{ wn10_00_000130_drive_letters.stdout_lines }}"

      - name: "MEDIUM | WN10-00-000130 | PATCH | Software certificate installation files must be removed from Windows 10. | Remove Files"
        ansible.windows.win_file:
            path: "{{ item.path }}"
            state: absent
        with_items:
            - "{{ wn10_00_000130_files.results[0].files }}"
        loop_control:
            label: "{{ item.path }}"
        when: win10stig_disruption_high

      - name: "MEDIUM | WN10-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 10. | Alert on files if not Disruptive High"
        ansible.builtin.debug:
            msg:
                - "Warning!! You have .p12 and/or .pfx files on your system"
                - "Please review and remove the following files"
                - "{{ wn10_00_000130_files.results[0].files | map(attribute='path') | list }}"
        when: not win10stig_disruption_high

      - name: "MEDIUM | WN10-00-000130 | AUDIT | Software certificate installation files must be removed from Windows 10. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000130'
        when: not win10stig_disruption_high
  when:
      - wn10_00_000130
      - win10stig_lengthy_search
  tags:
      - WN10-00-000130
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220723r569187_rule
      - V-220723

- name: "MEDIUM | WN10-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system."
  block:
      - name: "MEDIUM | WN10-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Get Defender Firewall status"
        ansible.windows.win_shell: get-netfirewallprofile -all | Where-Object -Property Enabled -eq True | Select-Object -Property Name | Format-Table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn10_00_000135_defender_fw_status
        when: win10stig_firewall_type == "defender"

      - name: "MEDIUM | WN10-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Warn on Defender Firewall enabled"
        ansible.builtin.debug:
            msg:
                - "Warning!! You are using defender and 1 or more profiles are enabled"
                - "Please confirm the firewall profiles match the Firewall STIG"
                - "{{ wn10_00_000135_defender_fw_status.stdout_lines | select() | list }}"
        when:
            - wn10_00_000135_defender_fw_status.stdout_lines | select() | list | length > 0
            - win10stig_firewall_type == "defender"

      - name: "MEDIUM | WN10-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Alert on Defender Firewall disabled"
        ansible.builtin.debug:
            msg:
                - "Warning!! You are using Windows Defender as your firewall and it is fully disabled"
                - "Please enable the firewall using a Firewall profile provided by STIG"
                - "If you are not using Windows Defender as your firewall please adjust the win10stig_firewall_type variable to reflect that"
        when:
            - wn10_00_000135_defender_fw_status.stdout_lines | select() | list | length == 0
            - win10stig_firewall_type == "defender"

      - name: "MEDIUM | WN10-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Warn on 3rd party firewall"
        ansible.builtin.debug:
            msg:
                - "Warning!! You are not using Windows Defender as your firewall."
                - "Please review the required profiles/settings for that firewall to confirm it aligns with STIG standards."
        when: win10stig_firewall_type != "defender"

      - name: "MEDIUM | WN10-00-000135 | AUDIT | A host-based firewall must be installed and enabled on the system. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000135'
  when:
      - wn10_00_000135
  tags:
      - WN10-00-000135
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220724r569187_rule
      - V-220724

- name: "MEDIUM | WN10-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 10 domain workstations must only allow authorized remote management hosts."
  block:
      - name: "MEDIUM | WN10-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 10 domain workstations must only allow authorized remote management hosts. | Alert if automation managed not enabled"
        ansible.builtin.debug:
            msg:
                - "Warning!! You are using Windows Defender as your firewall on this host. Please confirm Inbound Rules only allow authorized inbound traffic"
        when:
            - win10stig_firewall_type == "defender"
            - ansible_windows_domain_member
            - not win10stig_firewall_automation_managed_inbound

      - name: "MEDIUM | WN10-00-000140 | AUDIT | Inbound exceptions to the firewall on Windows 10 domain workstations must only allow authorized remote management hosts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000140'
        when:
            - win10stig_firewall_type == "defender"
            - ansible_windows_domain_member
            - not win10stig_firewall_automation_managed_inbound
  when:
      - wn10_00_000140
  tags:
      - WN10-00-000140
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220725r569187_rule
      - V-220725

- name: "MEDIUM | WN10-00-000155 | PATCH | The Windows PowerShell 2.0 feature must be disabled on the system."
  ansible.windows.win_optional_feature:
      name: MicrosoftWindowsPowerShellV2Root
      state: absent
  when:
      - wn10_00_000155
  tags:
      - WN10-00-000155
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220728r569187_rule
      - V-220728

- name: "MEDIUM | WN10-00-000160 | PATCH | The Server Message Block (SMB) v1 protocol must be disabled on the system."
  ansible.windows.win_optional_feature:
      name: SMB1Protocol
      state: absent
  when:
      - wn10_00_000160
  tags:
      - WN10-00-000160
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220729r793187_rule
      - V-220729

- name: "MEDIUM | WN10-00-000165 | PATCH | The Server Message Block (SMB) v1 protocol must be disabled on the SMB server."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
      value: SMB1
      state: present
      data: 0
      type: dword
  when:
      - wn10_00_000165
  tags:
      - WN10-00-000165
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220730r793189_rule
      - V-220730

- name: "MEDIUM | WN10-00-000170 | PATCH | The Server Message Block (SMB) v1 protocol must be disabled on the SMB client."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\mrxsmb10
      value: Start
      state: present
      data: 4
      type: dword
  notify: reboot windows
  when:
      - wn10_00_000170
  tags:
      - WN10-00-000170
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220731r793191_rule
      - V-220731

# This service can't be stopped manually (through automation or manually through Services)
# You need to disable then reboot Windows for the service to be stopped
- name: "MEDIUM | WN10-00-000175 | PATCH | The Secondary Logon service must be disabled on Windows 10."
  ansible.windows.win_service:
      name: seclogon
      start_mode: disabled
  notify: reboot windows
  when:
      - wn10_00_000175
  tags:
      - WN10-00-000175
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220732r569187_rule
      - V-220732

- name: "MEDIUM | WN10-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 10."
  block:
      - name: "MEDIUM | WN10-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 10. | Check For Orphaned User Accounts."
        ansible.windows.win_shell: Get-WmiObject -Class win32_useraccount | Where-Object {$_.SID -match "*S"} | Select name,sid,domain
        changed_when: false
        failed_when: false
        register: wn10_00_000190_orphaned_user_accounts

      - name: "MEDIUM | WN10-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 10. | Audit For User Accounts Found."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the User Rights listed for each of any unresolved SID to determine whether they are valid."
                - "User Accounts"
                - "----------------------------------------------------------------------"
                - "{{ wn10_00_000190_orphaned_user_accounts.stdout_lines }}"
        when: wn10_00_000190_orphaned_user_accounts.stdout_lines | select() | length > 0

      - name: "MEDIUM | WN10-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 10. | Check For Orphaned Group Accounts."
        ansible.windows.win_shell: Get-WmiObject -Class win32_group | Where-Object {$_.SID -match "*S"} | Select name,sid,domain
        changed_when: false
        failed_when: false
        register: wn10_00_000190_orphaned_group_accounts

      - name: "MEDIUM | WN10-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 10. | Audit For Group Accounts Found."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the User Rights listed for each of any unresolved SID to determine whether they are valid."
                - "Group Accounts"
                - "----------------------------------------------------------------------"
                - "{{ wn10_00_000190_orphaned_user_accounts.stdout_lines }}"
        when: wn10_00_000190_orphaned_group_accounts.stdout_lines | select() | length > 0

      - name: "MEDIUM | WN10-00-000190 | AUDIT | Orphaned security identifiers (SIDs) must be removed from user rights on Windows 10. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000190'
        when:
            - wn10_00_000190_orphaned_user_accounts.stdout_lines | select() | length > 0 or
              wn10_00_000190_orphaned_group_accounts.stdout_lines | select() | length > 0
  when:
      - wn10_00_000190
  tags:
      - WN10-00-000190
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220733r569187_rule
      - V-220733

- name: "MEDIUM | WN10-00-000210 | PATCH | Bluetooth must be turned off unless approved by the organization."
  block:
      - name: "MEDIUM | WN10-00-000210 | PATCH | Bluetooth must be turned off unless approved by the organization. | Disable BT in the registry"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\ActionCenter\QuickActions\All\SystemSettings_Device_BluetoothQuickAction
            value: Type
            state: present
            data: 1
            type: dword
        notify: reboot windows

      - name: "MEDIUM | WN10-00-000210 | PATCH | Bluetooth must be turned off unless approved by the organization. | Disable BT service"
        ansible.windows.win_service:
            name: bthserv
            state: stopped
            start_mode: disabled
  when:
      - wn10_00_000210
  tags:
      - WN10-00-000210
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220734r569187_rule
      - V-220734

- name: "MEDIUM | WN10-00-000220 | PATCH | Bluetooth must be turned off when not in use."
  block:
      - name: "MEDIUM | WN10-00-000220 | PATCH | Bluetooth must be turned off when not in use. | Disable BT in the registry"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\ActionCenter\QuickActions\All\SystemSettings_Device_BluetoothQuickAction
            value: Type
            state: present
            data: 1
            type: dword
        notify: reboot windows

      - name: "MEDIUM | WN10-00-000220 | PATCH | Bluetooth must be turned off when not in use. | Disable BT service"
        ansible.windows.win_service:
            name: bthserv
            state: stopped
            start_mode: disabled
  when:
      - wn10_00_000220
  tags:
      - WN10-00-000220
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220735r569187_rule
      - V-220735

- name: "MEDIUM | WN10-00-000230 | PATCH | The system must notify the user when a Bluetooth device attempts to connect."
  ansible.windows.win_regedit:
      path: HKCU:\Software\Microsoft\BluetoothAuthenticationAgent
      value: AcceptIncomingRequests
      state: present
      data: 1
      type: dword
  when:
      - wn10_00_000230
  tags:
      - WN10-00-000230
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220736r569187_rule
      - V-220736

- name: "MEDIUM | WN10-00-000250 | AUDIT | Windows 10 non-persistent VM sessions should not exceed 24 hours."
  ansible.builtin.debug:
      msg: "Warning!! Please investigate VDI settings to make sure they are non-persistent and do not exceed 24 hours."
  when:
      - wn10_00_000250
  tags:
      - WN10-00-000250
      - CAT2
      - CCI-001199
      - SRG-OS-000185-GPOS-00079
      - SV-220738r569187_rule
      - V-220738

# Controls wn10_00_000005, WN19-AC-000020, and WN19-AC-000030 need to be in a different order for cloud based systems (AWS, Azure, etc.) vs non-cloud systems (VMWare, VirtualBox, etc.)
# The task below loads the control group in the correct order for cloud based systems
- name: "CAT2 task side load for WN19-AC-000010, WN10-AC-000015, and WN10-AC-000005"
  ansible.builtin.import_tasks: cat2_cloud_lockout_order.yml
  when:
      - win10stig_cloud_based_system
  tags:
      - cat2_cloud_lockout_order

# Needs to go before WN10-AC-000005 since the Lockout Duration could be disabled if the Lockout Policy is set to 0 causing the task to fail
- name: "MEDIUM | WN10-AC-000010 | PATCH | The number of allowed bad logon attempts must be configured to 3 or less."
  community.windows.win_security_policy:
      section: System Access
      key: LockoutBadCount
      value: "{{ win10stig_account_settings.lockoutbadcount }}"
  when:
      - wn10_AC_000010
      - not win10stig_cloud_based_system
  tags:
      - WN10-AC-000010
      - CAT2
      - CCI-000044
      - SRG-OS-000021-GPOS-00005
      - SV-220740r569187_rule
      - V-220740

# Putting this before WN10-AC-000005 ensures the value being set conforms to the needed standard for account settings
# The Lockout Duration must be greater or equal to the Reset Account Lockout counter.
- name: "MEDIUM | WN10-AC-000015 | PATCH | The period of time before the bad logon counter is reset must be configured to 15 minutes."
  community.windows.win_security_policy:
      section: System Access
      key: ResetLockoutCount
      value: "{{ win10stig_account_settings.resetlockoutcount }}"
  when:
      - wn10_AC_000015
      - not win10stig_cloud_based_system
  tags:
      - WN10-AC-000015
      - CAT2
      - CCI-000044
      - CCI-002238
      - SRG-OS-000021-GPOS-00005
      - SV-220741r569187_rule
      - V-220741

- name: "MEDIUM | WN10-AC-000005 | PATCH | Windows 10 account lockout duration must be configured to 15 minutes or greater."
  community.windows.win_security_policy:
      section: System Access
      key: LockoutDuration
      value: "{{ win10stig_account_settings.lockoutduration }}"
  when:
      - wn10_AC_000005
      - not win10stig_cloud_based_system
  tags:
      - WN10-AC-000005
      - CAT2
      - CCI-002238
      - SRG-OS-000329-GPOS-00128
      - SV-220739r569187_rule
      - V-220739

- name: "MEDIUM | WN10-AC-000020 | PATCH | The password history must be configured to 24 passwords remembered."
  community.windows.win_security_policy:
      section: System Access
      key: PasswordHistorySize
      value: "{{ win10stig_account_settings.passwordhistory }}"
  when:
      - wn10_AC_000020
  tags:
      - WN10-AC-000020
      - CAT2
      - CCI-000200
      - SRG-OS-000077-GPOS-00045
      - SV-220742r569187_rule
      - V-220742

- name: "MEDIUM | WN10-AC-000025 | PATCH | The maximum password age must be configured to 60 days or less."
  community.windows.win_security_policy:
      section: System Access
      key: MaximumPasswordAge
      value: "{{ win10stig_account_settings.max_pass_age }}"
  when:
      - wn10_AC_000025
  tags:
      - WN10-AC-000025
      - CAT2
      - CCI-000199
      - SRG-OS-000076-GPOS-00044
      - SV-220743r569187_rule
      - V-220743

- name: "MEDIUM | WN10-AC-000030 | PATCH | The minimum password age must be configured to at least 1 day."
  community.windows.win_security_policy:
      section: System Access
      key: MinimumPasswordAge
      value: "{{ win10stig_account_settings.min_pass_age }}"
  when:
      - wn10_AC_000030
  tags:
      - WN10-AC-000030
      - CAT2
      - CCI-000198
      - SRG-OS-000075-GPOS-00043
      - SV-220744r569187_rule
      - V-220744

- name: "MEDIUM | WN10-AC-000035 | PATCH | Passwords must, at a minimum, be 14 characters."
  community.windows.win_security_policy:
      section: System Access
      key: MinimumPasswordLength
      value: "{{ win10stig_account_settings.min_pass_length }}"
  when:
      - wn10_AC_000035
  tags:
      - WN10-AC-000035
      - CAT2
      - CCI-000205
      - SRG-OS-000078-GPOS-00046
      - SV-220745r569187_rule
      - V-220745

- name: "MEDIUM | WN10-AC-000040 | PATCH | The built-in Microsoft password complexity filter must be enabled."
  community.windows.win_security_policy:
      section: System Access
      key: PasswordComplexity
      value: 1
  when:
      - wn10_AC_000040
  tags:
      - WN10-AC-000040
      - CAT2
      - CCI-000192
      - CCI-000193
      - CCI-000194
      - CCI-001619
      - SRG-OS-000069-GPOS-00037
      - SV-220746r569187_rule
      - V-220746

- name: |
    "MEDIUM | WN10-AU-000005 | PATCH | The system must be configured to audit Account Logon - Credential Validation failures."
    "MEDIUM | WN10-AU-000010 | PATCH | The system must be configured to audit Account Logon - Credential Validation successes."
  community.windows.win_audit_policy_system:
      subcategory: Credential Validation
      audit_type: "{{ (wn10_AU_000005 and not wn10_AU_000010) | ternary ('failure', '') }}{{ (wn10_AU_000010 and not wn10_AU_000005) | ternary ('success', '') }}{{ (wn10_AU_000005 and wn10_AU_000010) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000005 or
        wn10_AU_000010
  tags:
      - WN10-AU-000005
      - WN10-AU-000010
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-220748r569187_rule
      - SV-220749r569187_rule
      - V-220748
      - V-220749

- name: "MEDIUM | WN10-AU-000030 | PATCH | The system must be configured to audit Account Management - Security Group Management successes."
  community.windows.win_audit_policy_system:
      subcategory: Security Group Management
      audit_type: "{{ win10stig_audit_settings.security_group_mngmnt_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000030
  tags:
      - WN10-AU-000030
      - CAT2
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - CCI-002234
      - SRG-OS-000004-GPOS-00004
      - SV-220750r569187_rule
      - V-220750

- name: |
    "MEDIUM | WN10-AU-000035 | PATCH | The system must be configured to audit Account Management - User Account Management failures."
    "MEDIUM | WN10-AU-000040 | PATCH | The system must be configured to audit Account Management - User Account Management successes."
  community.windows.win_audit_policy_system:
      subcategory: User Account Management
      audit_type: "{{ (wn10_AU_000035 and not wn10_AU_000040) | ternary ('failure', '') }}{{ (wn10_AU_000040 and not wn10_AU_000035) | ternary ('success', '') }}{{ (wn10_AU_000035 and wn10_AU_000040) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000035 or
        wn10_AU_000040
  tags:
      - WN10-AU-000035
      - WN10-AU-000040
      - CAT2
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - CCI-002234
      - SRG-OS-000004-GPOS-00004
      - SV-220751r569187_rule
      - SV-220752r569187_rule
      - V-220751
      - V-220752

- name: "MEDIUM | WN10-AU-000045 | PATCH | The system must be configured to audit Detailed Tracking - PNP Activity successes."
  community.windows.win_audit_policy_system:
      subcategory: Plug and Play Events
      audit_type: "{{ win10stig_audit_settings.pnp_activity_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000045
  tags:
      - WN10-AU-000045
      - CAT2
      - CCI-001814
      - CCI-000172
      - SRG-OS-000365-GPOS-00152
      - SV-220753r569187_rule
      - V-220753

- name: "MEDIUM | WN10-AU-000050 | PATCH | The system must be configured to audit Detailed Tracking - Process Creation successes."
  community.windows.win_audit_policy_system:
      subcategory: Process Creation
      audit_type: "{{ win10stig_audit_settings.process_creation_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000050
  tags:
      - WN10-AU-000050
      - CAT2
      - CCI-001814
      - CCI-000172
      - SRG-OS-000365-GPOS-00152
      - SV-220754r569187_rule
      - V-220754

- name: "MEDIUM | WN10-AU-000054 | PATCH | The system must be configured to audit Logon/Logoff - Account Lockout failures."
  community.windows.win_audit_policy_system:
      subcategory: Account Lockout
      audit_type: "{{ win10stig_audit_settings.accnt_lockout_include_success | ternary ('success, failure', 'failure' ) }}"
  when:
      - wn10_AU_000054
  tags:
      - WN10-AU-000054
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-220755r569187_rule
      - V-220755

- name: "MEDIUM | WN10-AU-000060 | PATCH | The system must be configured to audit Logon/Logoff - Group Membership successes."
  community.windows.win_audit_policy_system:
      subcategory: Group Membership
      audit_type: "{{ win10stig_audit_settings.group_membership_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000060
  tags:
      - WN10-AU-000060
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-220756r569187_rule
      - V-220756

- name: "MEDIUM | WN10-AU-000065 | PATCH | The system must be configured to audit Logon/Logoff - Logoff successes."
  community.windows.win_audit_policy_system:
      subcategory: Logoff
      audit_type: "{{ win10stig_audit_settings.logoff_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000065
  tags:
      - WN10-AU-000065
      - CAT2
      - CCI-000067
      - CCI-000172
      - SRG-OS-000032-GPOS-00013
      - SV-220757r569187_rule
      - V-220757

- name: |
    "MEDIUM | WN10-AU-000070 | PATCH | The system must be configured to audit Logon/Logoff - Logon failures."
    "MEDIUM | WN10-AU-000075 | PATCH | The system must be configured to audit Logon/Logoff - Logon successes."
  community.windows.win_audit_policy_system:
      subcategory: Logon
      audit_type: "{{ (wn10_AU_000070 and not wn10_AU_000075) | ternary ('failure', '') }}{{ (wn10_AU_000075 and not wn10_AU_000070) | ternary ('success', '') }}{{ (wn10_AU_000070 and wn10_AU_000075) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000070 or
        wn10_AU_000075
  tags:
      - WN10-AU-000070
      - WN10-AU-000075
      - CAT2
      - CCI-000067
      - CCI-000172
      - SRG-OS-000032-GPOS-00013
      - SV-220758r569187_rule
      - SV-220759r569187_rule
      - V-220758
      - V-220759

- name: "MEDIUM | WN10-AU-000080 | PATCH | The system must be configured to audit Logon/Logoff - Special Logon successes."
  community.windows.win_audit_policy_system:
      subcategory: Special Logon
      audit_type: "{{ win10stig_audit_settings.special_logon_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000080
  tags:
      - WN10-AU-000080
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-220760r569187_rule
      - V-220760

- name: |
    "MEDIUM | WN10-AU-000081 | PATCH | Windows 10 must be configured to audit Object Access - File Share failures."
    "MEDIUM | WN10-AU-000082 | PATCH | Windows 10 must be configured to audit Object Access - File Share successes."
  community.windows.win_audit_policy_system:
      subcategory: File Share
      audit_type: "{{ (wn10_AU_000081 and not wn10_AU_000082) | ternary ('failure', '') }}{{ (wn10_AU_000082 and not wn10_AU_000081) | ternary ('success', '') }}{{ (wn10_AU_000081 and wn10_AU_000082) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000081 or
        wn10_AU_000082
  tags:
      - WN10-AU-000081
      - WN10-AU-000082
      - CAT2
      - CCI-000172
      - SRG-OS-000474-GPOS-00219
      - SV-220761r569187_rule
      - SV-220762r569187_rule
      - V-220761
      - V-220762

- name: |
    "MEDIUM | WN10-AU-000083 | PATCH | Windows 10 must be configured to audit Object Access - Other Object Access Events successes."
    "MEDIUM | WN10-AU-000084 | PATCH | Windows 10 must be configured to audit Object Access - Other Object Access Events failures."
  community.windows.win_audit_policy_system:
      subcategory: Other Object Access Events
      audit_type: "{{ (wn10_AU_000083 and not wn10_AU_000084) | ternary ('success', '') }}{{ (wn10_AU_000084 and not wn10_AU_000083) | ternary ('failure', '') }}{{ (wn10_AU_000083 and wn10_AU_000084) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000083 or
        wn10_AU_000084
  tags:
      - WN10-AU-000083
      - WN10-AU-000084
      - CAT2
      - CCI-000172
      - SRG-OS-000474-GPOS-00219
      - SV-220763r569187_rule
      - SV-220764r569187_rule
      - V-220763
      - V-220764

- name: |
    "MEDIUM | WN10-AU-000085 | PATCH | The system must be configured to audit Object Access - Removable Storage failures."
    "MEDIUM | WN10-AU-000090 | PATCH | The system must be configured to audit Object Access - Removable Storage successes."
  community.windows.win_audit_policy_system:
      subcategory: Removable Storage
      audit_type: "{{ (wn10_AU_000085 and not wn10_AU_000090) | ternary ('failure', '') }}{{ (wn10_AU_000090 and not wn10_AU_000085) | ternary ('success', '') }}{{ (wn10_AU_000085 and wn10_AU_000090) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000085 or
        wn10_AU_000090
  tags:
      - WN10-AU-000085
      - WN10-AU-000090
      - CAT2
      - CCI-000172
      - SRG-OS-000474-GPOS-00219
      - SV-220765r569187_rule
      - SV-220766r569187_rule
      - V-220765
      - V-220766

- name: "MEDIUM | WN10-AU-000100 | PATCH | The system must be configured to audit Policy Change - Audit Policy Change successes."
  community.windows.win_audit_policy_system:
      subcategory: Audit Policy Change
      audit_type: "{{ win10stig_audit_settings.audit_policy_change_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000100
  tags:
      - WN10-AU-000100
      - CAT2
      - CCI-000172
      - SRG-OS-000471-GPOS-00215
      - SV-220767r569187_rule
      - V-220767

- name: "MEDIUM | WN10-AU-000105 | PATCH | The system must be configured to audit Policy Change - Authentication Policy Change successes."
  community.windows.win_audit_policy_system:
      subcategory: Authentication Policy Change
      audit_type: "{{ win10stig_audit_settings.authentication_policy_change_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000105
  tags:
      - WN10-AU-000105
      - CAT2
      - CCI-002234
      - CCI-000172
      - SRG-OS-000327-GPOS-00127
      - SV-220768r569187_rule
      - V-220768

- name: "MEDIUM | WN10-AU-000107 | PATCH | The system must be configured to audit Policy Change - Authorization Policy Change successes."
  community.windows.win_audit_policy_system:
      subcategory: Authorization Policy Change
      audit_type: "{{ win10stig_audit_settings.authorization_policy_change_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000107
  tags:
      - WN10-AU-000107
      - CAT2
      - CCI-000172
      - SRG-OS-000471-GPOS-00215
      - SV-220769r569187_rule
      - V-220769

- name: |
    "MEDIUM | WN10-AU-000110 | PATCH | The system must be configured to audit Privilege Use - Sensitive Privilege Use failures."
    "MEDIUM | WN10-AU-000115 | PATCH | The system must be configured to audit Privilege Use - Sensitive Privilege Use successes."
  community.windows.win_audit_policy_system:
      subcategory: Sensitive Privilege Use
      audit_type: "{{ (wn10_AU_000110 and not wn10_AU_000115) | ternary ('failure', '') }}{{ (wn10_AU_000115 and not wn10_AU_000110) | ternary ('success', '') }}{{ (wn10_AU_000110 and wn10_AU_000115) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000110 or
        wn10_AU_000115
  tags:
      - WN10-AU-000110
      - WN10-AU-000115
      - CAT2
      - CCI-002234
      - CCI-000172
      - SRG-OS-000327-GPOS-00127
      - SV-220770r569187_rule
      - SV-220771r569187_rule
      - V-220770
      - V-220771

- name: "MEDIUM | WN10-AU-000120 | PATCH | The system must be configured to audit System - IPSec Driver failures."
  community.windows.win_audit_policy_system:
      subcategory: IPSec Driver
      audit_type: "{{ win10stig_audit_settings.ipsec_drive_include_success | ternary ('success, failure', 'failure' ) }}"
  when:
      - wn10_AU_000120
  tags:
      - WN10-AU-000120
      - CAT2
      - CCI-000172
      - SRG-OS-000477-GPOS-00222
      - SV-220772r569187_rule
      - V-220772

- name: |
    "MEDIUM | WN10-AU-000130 | PATCH | The system must be configured to audit System - Other System Events successes."
    "MEDIUM | WN10-AU-000135 | PATCH | The system must be configured to audit System - Other System Events failures."
  community.windows.win_audit_policy_system:
      subcategory: Other System Events
      audit_type: "{{ (wn10_AU_000130 and not wn10_AU_000135) | ternary ('success', '') }}{{ (wn10_AU_000135 and not wn10_AU_000130) | ternary ('failure', '') }}{{ (wn10_AU_000130 and wn10_AU_000135) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000130 or
        wn10_AU_000135
  tags:
      - WN10-AU-000130
      - WN10-AU-000135
      - CAT2
      - CCI-000172
      - SRG-OS-000471-GPOS-00215
      - SV-220773r569187_rule
      - SV-220774r569187_rule
      - V-220773
      - V-220774

- name: "MEDIUM | WN10-AU-000140 | PATCH | The system must be configured to audit System - Security State Change successes."
  community.windows.win_audit_policy_system:
      subcategory: Security State Change
      audit_type: "{{ win10stig_audit_settings.security_state_change_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000140
  tags:
      - WN10-AU-000140
      - CAT2
      - CCI-002234
      - CCI-000172
      - SRG-OS-000327-GPOS-00127
      - SV-220775r569187_rule
      - V-220775

- name: "MEDIUM | WN10-AU-000150 | PATCH | The system must be configured to audit System - Security System Extension successes."
  community.windows.win_audit_policy_system:
      subcategory: Security System Extension
      audit_type: "{{ win10stig_audit_settings.security_system_extension_include_failure | ternary ('success, failure', 'success' ) }}"
  when:
      - wn10_AU_000150
  tags:
      - WN10-AU-000150
      - CAT2
      - CCI-002234
      - CCI-000172
      - SRG-OS-000327-GPOS-00127
      - SV-220776r569187_rule
      - V-220776

- name: |
    "MEDIUM | WN10-AU-000155 | PATCH | The system must be configured to audit System - System Integrity failures."
    "MEDIUM | WN10-AU-000160 | PATCH | The system must be configured to audit System - System Integrity successes."
  community.windows.win_audit_policy_system:
      subcategory: System Integrity
      audit_type: "{{ (wn10_AU_000155 and not wn10_AU_000160) | ternary ('failure', '') }}{{ (wn10_AU_000160 and not wn10_AU_000155) | ternary ('success', '') }}{{ (wn10_AU_000155 and wn10_AU_000160) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000155 or
        wn10_AU_000160
  tags:
      - WN10-AU-000155
      - WN10-AU-000160
      - CAT2
      - CCI-002234
      - CCI-000172
      - SRG-OS-000327-GPOS-00127
      - SV-220777r569187_rule
      - SV-220778r569187_rule
      - V-220777
      - V-220778

- name: "MEDIUM | WN10-AU-000500 | PATCH | The Application event log size must be configured to 32768 KB or greater."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
      value: MaxSize
      state: present
      data: "{{ win10stig_app_log_max_size }}"
      type: dword
  when:
      - wn10_AU_000500
  tags:
      - WN10-AU-000500
      - CAT2
      - CCI-001849
      - SRG-OS-000341-GPOS-00132
      - SV-220779r569187_rule
      - V-220779

- name: "MEDIUM | WN10-AU-000505 | PATCH | The Security event log size must be configured to 1024000 KB or greater."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
      value: MaxSize
      state: present
      data: "{{ win10stig_sec_log_max_size }}"
      type: dword
  when:
      - wn10_AU_000505
  tags:
      - WN10-AU-000505
      - CAT2
      - CCI-001849
      - SRG-OS-000341-GPOS-00132
      - SV-220780r569187_rule
      - V-220780

- name: "MEDIUM | WN10-AU-000510 | PATCH | The System event log size must be configured to 32768 KB or greater."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
      value: MaxSize
      state: present
      data: "{{ win10stig_sys_log_max_size }}"
      type: dword
  when:
      - wn10_AU_000510
  tags:
      - WN10-AU-000510
      - CAT2
      - CCI-001849
      - SRG-OS-000341-GPOS-00132
      - SV-220781r569187_rule
      - V-220781

- name: "MEDIUM | WN10-AU-000515 | AUDIT | Windows 10 permissions for the Application event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN10-AU-000515 | PATCH | Windows 10 permissions for the Application event log must prevent access by non-privileged accounts. | Set Default Log Locations."
        ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\Application
            value: File
            state: present
            data: '%SystemRoot%\system32\winevt\Logs\Application.evtx'
            type: expandstring
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000515 | AUDIT | Windows 10 permissions for the Application event log must prevent access by non-privileged accounts. | Get Current Permissions For Default Application Log."
        ansible.windows.win_shell: get-acl c:\Windows\System32\winevt\Logs\Application.evtx | FL AccessToString
        changed_when: false
        failed_when: false
        register: wn10_au_000515_app_log_permissions
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000515 | AUDIT | Windows 10 permissions for the Application event log must prevent access by non-privileged accounts. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Ensure the permissions on the Application event log (Application.evtx) are configured"
                - "to prevent standard user accounts or groups from having access."
                - "{{ wn10_au_000515_app_log_permissions.stdout_lines | reject('match', '^$') | list }}"
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000515 | AUDIT | Windows 10 permissions for the Application event log must prevent access by non-privileged accounts. | Warning message for default location change."
        ansible.builtin.debug:
            msg:
                - "Warning!! The location of the logs is not set to default location."
                - "When adding Eventlog to the permissions, it must be entered as NT Service\\Eventlog."
        when: not win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000515 | AUDIT | Windows 10 permissions for the Application event log must prevent access by non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-AU-000515'
        when:
            - win10stig_default_log_location or
              not win10stig_default_log_location
  when:
      - wn10_AU_000515
  tags:
      - WN10-AU-000515
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - SRG-OS-000057-GPOS-00027
      - SV-220782r569187_rule
      - V-220782

- name: "MEDIUM | WN10-AU-000520 | AUDIT | Windows 10 permissions for the Security event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN10-AU-000520 | PATCH | Windows 10 permissions for the Security event log must prevent access by non-privileged accounts. | Set Default Log Locations."
        ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\Security
            value: File
            state: present
            data: '%SystemRoot%\system32\winevt\Logs\Security.evtx'
            type: expandstring
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000520 | AUDIT | Windows 10 permissions for the Security event log must prevent access by non-privileged accounts. | Get Current Permissions For Default Security Log."
        ansible.windows.win_shell: get-acl c:\Windows\System32\winevt\Logs\Security.evtx | FL AccessToString
        changed_when: false
        failed_when: false
        register: wn10_au_000520_security_log_permissions
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000520 | AUDIT | Windows 10 permissions for the Security event log must prevent access by non-privileged accounts. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Ensure the permissions on the Security event log (Security.evtx) are configured"
                - "to prevent standard user accounts or groups from having access."
                - "{{ wn10_au_000520_security_log_permissions.stdout_lines | reject('match', '^$') | list }}"
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000520 | AUDIT | Windows 10 permissions for the Security event log must prevent access by non-privileged accounts. | Warning message for default location change."
        ansible.builtin.debug:
            msg:
                - "Warning!! The location of the logs is not set to default location."
                - "When adding Eventlog to the permissions, it must be entered as NT Service\\Eventlog."
        when: not win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000520 | AUDIT | Windows 10 permissions for the Security event log must prevent access by non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-AU-000520'
        when:
            - win10stig_default_log_location or
              not win10stig_default_log_location
  when:
      - wn10_AU_000520
  tags:
      - WN10-AU-000520
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - SRG-OS-000057-GPOS-00027
      - SV-220783r569187_rule
      - V-220783

- name: "MEDIUM | WN10-AU-000525 | AUDIT | Windows 10 permissions for the System event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN10-AU-000525 | PATCH | Windows 10 permissions for the System event log must prevent access by non-privileged accounts. | Set Default Log Locations."
        ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\System
            value: File
            state: present
            data: '%SystemRoot%\system32\winevt\Logs\System.evtx'
            type: expandstring
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000525 | AUDIT | Windows 10 permissions for the System event log must prevent access by non-privileged accounts. | Get Current Permissions For Default System Log."
        ansible.windows.win_shell: get-acl c:\Windows\System32\winevt\Logs\System.evtx | FL AccessToString
        changed_when: false
        failed_when: false
        register: wn10_au_000520_system_log_permissions
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000525 | AUDIT | Windows 10 permissions for the System event log must prevent access by non-privileged accounts. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Ensure the permissions on the Security event log (System.evtx) are configured"
                - "to prevent standard user accounts or groups from having access."
                - "{{ wn10_au_000520_system_log_permissions.stdout_lines | reject('match', '^$') | list }}"
        when: win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000525 | AUDIT | Windows 10 permissions for the System event log must prevent access by non-privileged accounts. | Warning message for default location change."
        ansible.builtin.debug:
            msg:
                - "Warning!! The location of the logs is not set to default location."
                - "When adding Eventlog to the permissions, it must be entered as NT Service\\Eventlog."
        when: not win10stig_default_log_location

      - name: "MEDIUM | WN10-AU-000525 | AUDIT | Windows 10 permissions for the System event log must prevent access by non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-AU-000525'
        when:
            - win10stig_default_log_location or
              not win10stig_default_log_location
  when:
      - wn10_AU_000525
  tags:
      - WN10-AU-000525
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - SRG-OS-000057-GPOS-00027
      - SV-220784r569187_rule
      - V-220784

- name: "MEDIUM | WN10-AU-000555 | PATCH | Windows 10 must be configured to audit Other Policy Change Events Failures."
  community.windows.win_audit_policy_system:
      subcategory: Other Policy Change Events
      audit_type: failure
  when:
      - wn10_AU_000555
  tags:
      - WN10-AU-000555
      - CAT2
      - CCI-000130
      - SRG-OS-000037-GPOS-00015
      - SV-220786r569187_rule
      - V-220786

- name: |
    "MEDIUM | WN10-AU-000560 | PATCH | Windows 10 must be configured to audit other Logon/Logoff Events Successes."
    "MEIDUM | WN10-AU-000565 | PATCH | Windows 10 must be configured to audit other Logon/Logoff Events Failures."
  community.windows.win_audit_policy_system:
      subcategory: Other Logon/Logoff Events
      audit_type: "{{ (wn10_AU_000560 and not wn10_AU_000565) | ternary ('success', '') }}{{ (wn10_AU_000565 and not wn10_AU_000560) | ternary ('failure', '') }}{{ (wn10_AU_000560 and wn10_AU_000565) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000560 or
        wn10_AU_000565
  tags:
      - WN10-AU-000560
      - WN10-AU-000565
      - CAT2
      - CCI-000130
      - SRG-OS-000037-GPOS-00015
      - SV-220787r569187_rule
      - SV-220788r569187_rule
      - V-220787
      - V-220788

- name: "MEDIUM | WN10-AU-000570 | PATCH | Windows 10 must be configured to audit Detailed File Share Failures."
  community.windows.win_audit_policy_system:
      subcategory: Detailed File Share
      audit_type: "{{ win10stig_audit_settings.detailed_file_share_include_success | ternary ('success, failure', 'failure' ) }}"
  when:
      - wn10_AU_000570
  tags:
      - WN10-AU-000570
      - CAT2
      - CCI-000130
      - SRG-OS-000037-GPOS-00015
      - SV-220789r819664_rule
      - V-220789

- name: |
    "MEDIUM | WN10-AU-000575 | PATCH | Windows 10 must be configured to audit MPSSVC Rule-Level Policy Change Successes."
    "MEDIUM | WN10-AU-000580 | PATCH | Windows 10 must be configured to audit MPSSVC Rule-Level Policy Change Failures."
  community.windows.win_audit_policy_system:
      subcategory: MPSSVC Rule-Level Policy Change
      audit_type: "{{ (wn10_AU_000575 and not wn10_AU_000580) | ternary ('success', '') }}{{ (wn10_AU_000580 and not wn10_AU_000575) | ternary ('failure', '') }}{{ (wn10_AU_000575 and wn10_AU_000580) | ternary ('success, failure', '') }}"
  when:
      - wn10_AU_000575 or
        wn10_AU_000580
  tags:
      - WN10-AU-000575
      - WN10-AU-000580
      - CAT2
      - CCI-000130
      - SRG-OS-000037-GPOS-00015
      - SV-220790r569187_rule
      - SV-220791r569187_rule
      - V-220790
      - V-220791

- name: "MEDIUM | WN10-CC-000005 | PATCH | Camera access from the lock screen must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
      value: NoLockScreenCamera
      data: 1
      type: dword
  when:
      - wn10_CC_000005
  tags:
      - WN10-CC-000005
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220792r569187_rule
      - V-220792

- name: "MEDIUM | WN10-CC-000007 | PATCH | Windows 10 must cover or disable the built-in or attached camera when not in use."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\webcam
      value: Value
      data: deny
      type: string
  when:
      - wn10_CC_000007
  tags:
      - WN10-CC-000007
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220793r819667_rule
      - V-220793

- name: "MEDIUM | WN10-CC-000010 | PATCH | The display of slide shows on the lock screen must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
      value: NoLockScreenSlideshow
      data: 1
      type: dword
  when:
      - wn10_CC_000010
  tags:
      - WN10-CC-000010
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-0004
      - SV-220794r569187_rule
      - V-220794

- name: "MEDIUM | WN10-CC-000020 | PATCH | IPv6 source routing must be configured to highest protection."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters
      value: DisableIpSourceRouting
      data: 2
      type: dword
  when:
      - wn10_CC_000020
  tags:
      - WN10-CC-000020
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220795r569187_rule
      - V-220795

- name: "MEDIUM | WN10-CC-000025 | PATCH | The system must be configured to prevent IP source routing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters
      value: DisableIPSourceRouting
      data: 2
      type: dword
  when:
      - wn10_CC_000025
  tags:
      - WN10-CC-000025
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220796r569187_rule
      - V-220796

- name: "MEDIUM | WN10-CC-000037 | PATCH | Local administrator accounts must have their privileged token filtered to prevent elevated privileges from being used over the network on domain systems."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: LocalAccountTokenFilterPolicy
      data: 0
      type: dword
  when:
      - wn10_CC_000037
      - ansible_windows_domain_member
  tags:
      - WN10-CC-000037
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-220799r569187_rule
      - V-220799

- name: "MEDIUM | WN10-CC-000038 | PATCH | WDigest Authentication must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\Wdigest
      value: UseLogonCredential
      data: 0
      type: dword
  when:
      - wn10_CC_000038
  tags:
      - WN10-CC-000038
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220800r569187_rule
      - V-220800

- name: "MEDIUM | WN10-CC-000039 | PATCH | Run as different user must be removed from context menus."
  ansible.windows.win_regedit:
      path: HKLM:{{ item }}
      value: SuppressionPolicy
      data: 4096
      type: dword
  with_items:
      - \SOFTWARE\Classes\batfile\shell\runasuser
      - \SOFTWARE\Classes\cmdfile\shell\runasuser
      - \SOFTWARE\Classes\exefile\shell\runasuser
      - \SOFTWARE\Classes\mscfile\shell\runasuser
  when:
      - wn10_CC_000039
  tags:
      - WN10-CC-000039
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220801r569187_rule
      - V-220801

- name: "MEDIUM | WN10-CC-000040 | PATCH | Insecure logons to an SMB server must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation
      value: AllowInsecureGuestAuth
      data: 0
      type: dword
  when:
      - wn10_CC_000040
  tags:
      - WN10-CC-000040
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220802r569187_rule
      - V-220802

- name: "MEDIUM | WN10-CC-000044 | PATCH | Internet connection sharing must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections
      value: NC_ShowSharedAccessUI
      data: 0
      type: dword
  when:
      - wn10_CC_000044
  tags:
      - WN10-CC-000044
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220803r569187_rule
      - V-220803

- name: "MEDIUM | WN10-CC-000050 | PATCH | Hardened UNC Paths must be defined to require mutual authentication and integrity for at least the SYSVOL and NETLOGON shares."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths
      value: "{{ item }}"
      data: RequireMutualAuthentication=1, RequireIntegrity=1
      type: string
  with_items:
      - \\*\SYSVOL
      - \\*\NETLOGON
  when:
      - wn10_CC_000050
      - ansible_windows_domain_member
  tags:
      - WN10-CC-000050
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-250319r857185_rule
      - V-250319

- name: "MEDIUM | WN10-CC-000052 | PATCH | Windows 10 must be configured to prioritize ECC Curves with longer key lengths first."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Cryptography\Configuration\SSL\00010002
      value: EccCurves
      data: NistP384 NistP256
      type: string
  when:
      - wn10_CC_000052
  tags:
      - WN10-CC-000052
      - CAT2
      - CCI-000803
      - SRG-OS-000120-GPOS-00061
      - SV-220805r569187_rule
      - V-220805

- name: "MEDIUM | WN10-CC-000055 | PATCH | Simultaneous connections to the Internet or a Windows domain must be limited."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy
      value: fMinimizeConnections
      data: 3
      type: dword
  when:
      - wn10_CC_000055
  tags:
      - WN10-CC-000055
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220806r857188_rule
      - V-220806

- name: "MEDIUM | WN10-CC-000060 | PATCH | Connections to non-domain networks when connected to a domain authenticated network must be blocked."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WcmSvc\GroupPolicy
      value: fBlockNonDomain
      data: 1
      type: dword
  when:
      - wn10_CC_000060
      - ansible_windows_domain_member
  tags:
      - WN10-CC-000060
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220807r569187_rule
      - V-220807

# This functionality has been removed in Windows 10 v1803 and newer and is not applicable to those newer versions
- name: "MEDIUM | WN10-CC-000065 | PATCH | Wi-Fi Sense must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config
      value: AutoConnectAllowedOEM
      data: 0
      type: dword
  when:
      - wn10_CC_000065
      - ansible_distribution_version <= "10.0.1803.0"
  tags:
      - WN10-CC-000065
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220808r569187_rule
      - V-220808

- name: "MEDIUM | WN10-CC-000066 | PATCH | Command line data must be included in process creation events."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Audit
      value: ProcessCreationIncludeCmdLine_Enabled
      data: 1
      type: dword
  when:
      - wn10_CC_000066
  tags:
      - WN10-CC-000066
      - CAT2
      - CCI-000135
      - SRG-OS-000042-GPOS-00020
      - SV-220809r569187_rule
      - V-220809

# This control is not applicable to Windows 10 version 1507 and 1607
- name: "MEDIUM | WN10-CC-000068 | PATCH | Windows 10 must be configured to enable Remote host allows delegation of non-exportable credentials."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation
      value: AllowProtectedCreds
      data: 1
      type: dword
  when:
      - wn10_CC_000068
      - ansible_distribution_version != "10.0.1507.0" or
        ansible_distribution_version != "10.0.1607.0"
  tags:
      - WN10-CC-000068
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220810r569187_rule
      - V-220810

- name: "MEDIUM | WN10-CC-000085 | PATCH | Early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch
      value: DriverLoadPolicy
      data: "{{ win10stig_boot_driver_init_policy }}"
      type: dword
  when:
      - wn10_CC_000085
  tags:
      - WN10-CC-000085
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220813r569187_rule
      - V-220813

- name: "MEDIUM | WN10-CC-000090 | PATCH | Group Policy objects must be reprocessed even if they have not changed."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}
      value: NoGPOListChanges
      data: 0
      type: dword
  when:
      - wn10_CC_000090
  tags:
      - WN10-CC-000090
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220814r569187_rule
      - V-220814

- name: "MEDIUM | WN10-CC-000100 | PATCH | Downloading print driver packages over HTTP must be prevented."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
      value: DisableWebPnPDownload
      data: 1
      type: dword
  when:
      - wn10_CC_000100
  tags:
      - WN10-CC-000100
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220815r569187_rule
      - V-220815

- name: "MEDIUM | WN10-CC-000105 | PATCH | Web publishing and online ordering wizards must be prevented from downloading a list of providers."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
      value: NoWebServices
      data: 1
      type: dword
  when:
      - wn10_CC_000105
  tags:
      - WN10-CC-000105
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220816r569187_rule
      - V-220816

- name: "MEDIUM | WN10-CC-000110 | PATCH | Printing over HTTP must be prevented."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
      value: DisableHTTPPrinting
      data: 1
      type: dword
  when:
      - wn10_CC_000110
  tags:
      - WN10-CC-000110
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220817r569187_rule
      - V-220817

- name: "MEDIUM | WN10-CC-000115 | PATCH | Systems must at least attempt device authentication using certificates."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters
      value: DevicePKInitEnabled
      data: 1
      type: dword
  when:
      - wn10_CC_000115
      - ansible_windows_domain_member
  tags:
      - WN10-CC-000115
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220818r857191_rule
      - V-220818

- name: "MEDIUM | WN10-CC-000120 | PATCH | The network selection user interface (UI) must not be displayed on the logon screen."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: DontDisplayNetworkSelectionUI
      data: 1
      type: dword
  when:
      - wn10_CC_000120
  tags:
      - WN10-CC-000120
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220819r569187_rule
      - V-220819

- name: "MEDIUM | WN10-CC-000130 | PATCH | Local users on domain-joined computers must not be enumerated."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: EnumerateLocalUsers
      data: 0
      type: dword
  when:
      - wn10_CC_000130
      - ansible_windows_domain_member
  tags:
      - WN10-CC-000130
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220820r857194_rule
      - V-220820

- name: "MEDIUM | WN10-CC-000145 | PATCH | Users must be prompted for a password on resume from sleep (on battery)."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
      value: DCSettingIndex
      data: 1
      type: dword
  when:
      - wn10_CC_000145
  tags:
      - WN10-CC-000145
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00156
      - SV-220821r569187_rule
      - V-220821

- name: "MEDIUM | WN10-CC-000150 | PATCH | The user must be prompted for a password on resume from sleep (plugged in)."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
      value: ACSettingIndex
      data: 1
      type: dword
  when:
      - wn10_CC_000150
  tags:
      - WN10-CC-000150
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00156
      - SV-220822r569187_rule
      - V-220822

- name: "MEDIUM | WN10-CC-000165 | PATCH | Unauthenticated RPC clients must be restricted from connecting to the RPC server."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Rpc
      value: RestrictRemoteClients
      data: 1
      type: dword
  when:
      - wn10_CC_000165
  tags:
      - WN10-CC-000165
      - CAT2
      - CCI-001967
      - SRG-OS-000379-GPOS-00164
      - SV-220824r569187_rule
      - V-220824

# Windows 10 v1507 LTSB version does not include this setting and this control is NA to those systems
- name: "MEDIUM | WN10-CC-000195 | PATCH | Enhanced anti-spoofing for facial recognition must be enabled on Window 10."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Biometrics\FacialFeatures
      value: EnhancedAntiSpoofing
      data: 1
      type: dword
  when:
      - wn10_CC_000195
      - ansible_distribution_version != "10.0.1507.0"
  tags:
      - WN10-CC-000195
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220830r569187_rule
      - V-220830

- name: "MEDIUM | WN10-CC-000200 | PATCH | Administrator accounts must not be enumerated during elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI
      value: EnumerateAdministrators
      data: 0
      type: dword
  when:
      - wn10_CC_000200
  tags:
      - WN10-CC-000200
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-220832r569187_rule
      - V-220832

- name: "MEDIUM | WN10-CC-000204 | PATCH | If Enhanced diagnostic data is enabled it must be limited to the minimum required to support Windows Analytics."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
      value: LimitEnhancedDiagnosticDataWindowsAnalytics
      data: 1
      type: dword
  when:
      - wn10_CC_000204
      - ansible_distribution_version >= "10.0.1709.0"
      - win10stig_allow_telemetry_value == 2
  tags:
      - WN10-CC-000204
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220833r793250_rule
      - V-220833

- name: "MEDIUM | WN10-CC-000205 | PATCH | Windows Telemetry must not be configured to Full."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
      value: AllowTelemetry
      data: "{{ win10stig_allow_telemetry_value }}"
      type: dword
  when:
      - wn10_CC_000205
  tags:
      - WN10-CC-000205
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220834r569187_rule
      - V-220834

- name: "MEDIUM | WN10-CC-000210 | PATCH | The Windows Defender SmartScreen for Explorer must be enabled."
  block:
      - name: "MEDIUM | WN10-CC-000210 | PATCH | The Windows Defender SmartScreen for Explorer must be enabled. | SmartScreen enable"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
            value: EnableSmartScreen
            data: 1
            type: dword

      - name: "MEDIUM | WN10-CC-000210 | PATCH | The Windows Defender SmartScreen for Explorer must be enabled. | Block ShellSmartScreen"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
            value: ShellSmartScreenLevel
            data: Block
            type: string
  when:
      - wn10_CC_000210
  tags:
      - WN10-CC-000210
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220836r569187_rule
      - V-220836

- name: "MEDIUM | WN10-CC-000215 | PATCH | Explorer Data Execution Prevention must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
      value: NoDataExecutionPrevention
      data: 0
      type: dword
  when:
      - wn10_CC_000215
  tags:
      - WN10-CC-000215
      - CAT2
      - CCI-002824
      - SRG-OS-000433-GPOS-00192
      - SV-220837r569187_rule
      - V-220837

- name: "MEDIUM | WN10-CC-000225 | PATCH | File Explorer shell protocol must run in protected mode."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
      value: PreXPSP2ShellProtocolBehavior
      data: 0
      type: dword
  when:
      - wn10_CC_000225
  tags:
      - WN10-CC-000225
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220839r569187_rule
      - V-220839

- name: "MEDIUM | WN10-CC-000230 | PATCH | Users must not be allowed to ignore Windows Defender SmartScreen filter warnings for malicious websites in Microsoft Edge."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter
      value: PreventOverride
      data: 1
      type: dword
  when:
      - wn10_CC_000230
  tags:
      - WN10-CC-000230
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220840r569187_rule
      - V-220840

- name: "MEDIUM | WN10-CC-000235 | PATCH | Users must not be allowed to ignore Windows Defender SmartScreen filter warnings for unverified files in Microsoft Edge."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter
      value: PreventOverrideAppRepUnknown
      data: 1
      type: dword
  when:
      - wn10_CC_000235
  tags:
      - WN10-CC-000235
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220841r569187_rule
      - V-220841

- name: "MEDIUM | WN10-CC-000238 | PATCH | Windows 10 must be configured to prevent certificate error overrides in Microsoft Edge."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Internet Settings
      value: PreventCertErrorOverrides
      data: 1
      type: dword
  when:
      - wn10_CC_000238
  tags:
      - WN10-CC-000238
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220842r569187_rule
      - V-220842

- name: "MEDIUM | WN10-CC-000245 | PATCH | The password manager function in the Edge browser must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\Main
      value: FormSuggest Passwords
      data: no  # yamllint disable-line rule:truthy
      type: string
  when:
      - wn10_CC_000245
  tags:
      - WN10-CC-000245
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220843r569187_rule
      - V-220843

- name: "MEDIUM | WN10-CC-000250 | PATCH | The Windows Defender SmartScreen filter for Microsoft Edge must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter
      value: EnabledV9
      data: 1
      type: dword
  when:
      - wn10_CC_000250
  tags:
      - WN10-CC-000250
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220844r569187_rule
      - V-220844

- name: "MEDIUM | WN10-CC-000252 | PATCH | Windows 10 must be configured to disable Windows Game Recording and Broadcasting."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\GameDVR
      value: AllowGameDVR
      data: 0
      type: dword
  when:
      - wn10_CC_000252
  tags:
      - WN10-CC-000252
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220845r569187_rule
      - V-220845

- name: "MEDIUM | WN10-CC-000255 | PATCH | The use of a hardware security device with Windows Hello for Business must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\PassportForWork
      value: RequireSecurityDevice
      data: 1
      type: dword
  when:
      - wn10_CC_000255
  tags:
      - WN10-CC-000255
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220846r569187_rule
      - V-220846

- name: "MEDIUM | WN10-CC-000260 | PATCH | Windows 10 must be configured to require a minimum pin length of six characters or greater."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\PassportForWork\PINComplexity
      value: MinimumPINLength
      data: "{{ win10stig_min_pin_length }}"
      type: dword
  when:
      - wn10_CC_000260
  tags:
      - WN10-CC-000260
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220847r569187_rule
      - V-220847

- name: "MEDIUM | WN10-CC-000270 | PATCH | Passwords must not be saved in the Remote Desktop Client."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: DisablePasswordSaving
      data: 1
      type: dword
  when:
      - wn10_CC_000270
  tags:
      - WN10-CC-000270
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00156
      - SV-220848r569187_rule
      - V-220848

- name: "MEDIUM | WN10-CC-000275 | PATCH | Local drives must be prevented from sharing with Remote Desktop Session Hosts."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fDisableCdm
      data: 1
      type: dword
  when:
      - wn10_CC_000275
  tags:
      - WN10-CC-000275
      - CAT2
      - CCI-001090
      - SRG-OS-000138-GPOS-00069
      - SV-220849r569187_rule
      - V-220849

- name: "MEDIUM | WN10-CC-000280 | PATCH | Remote Desktop Services must always prompt a client for passwords upon connection."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fPromptForPassword
      data: 1
      type: dword
  when:
      - wn10_CC_000280
  tags:
      - WN10-CC-000280
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00156
      - SV-220850r569187_rule
      - V-220850

- name: "MEDIUM | WN10-CC-000285 | PATCH | The Remote Desktop Session Host must require secure RPC communications."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fEncryptRPCTraffic
      data: 1
      type: dword
  when:
      - wn10_CC_000285
  tags:
      - WN10-CC-000285
      - CAT2
      - CCI-001453
      - SRG-OS-000250-GPOS-00093
      - SV-220851r569187_rule
      - V-220851

- name: "MEDIUM | WN10-CC-000290 | PATCH | Remote Desktop Services must be configured with the client connection encryption set to the required level."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: MinEncryptionLevel
      data: 3
      type: dword
  when:
      - wn10_CC_000290
  tags:
      - WN10-CC-000290
      - CAT2
      - CCI-000068
      - CCI-002890
      - SRG-OS-000033-GPOS-00014
      - SV-220852r569187_rule
      - V-220852

- name: "MEDIUM | WN10-CC-000295 | PATCH | Attachments must be prevented from being downloaded from RSS feeds."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
      value: DisableEnclosureDownload
      data: 1
      type: dword
  when:
      - wn10_CC_000295
  tags:
      - WN10-CC-000295
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220853r569187_rule
      - V-220853

- name: "MEDIUM | WN10-CC-000300 | PATCH | Basic authentication for RSS feeds over HTTP must not be used."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
      value: AllowBasicAuthInClear
      data: 0
      type: dword
  when:
      - wn10_CC_000300
  tags:
      - WN10-CC-000300
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220854r569187_rule
      - V-220854

- name: "MEDIUM | WN10-CC-000305 | PATCH | Indexing of encrypted files must be turned off."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search
      value: AllowIndexingEncryptedStoresOrItems
      data: 0
      type: dword
  when:
      - wn10_CC_000305
  tags:
      - WN10-CC-000305
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220855r569187_rule
      - V-220855

- name: "MEDIUM | WN10-CC-000310 | PATCH | Users must be prevented from changing installation options."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
      value: EnableUserControl
      data: 0
      type: dword
  when:
      - wn10_CC_000310
  tags:
      - WN10-CC-000310
      - CAT2
      - CCI-001812
      - SRG-OS-000362-GPOS-00149
      - SV-220856r569187_rule
      - V-220856

- name: "MEDIUM | WN10-CC-000320 | PATCH | Users must be notified if a web-based program attempts to install software."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
      value: SafeForScripting
      data: 0
      type: dword
  when:
      - wn10_CC_000320
  tags:
      - WN10-CC-000320
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220858r569187_rule
      - V-220858

- name: "MEDIUM | WN10-CC-000325 | PATCH | Automatically signing in the last interactive user after a system-initiated restart must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: DisableAutomaticRestartSignOn
      data: 1
      type: dword
  when:
      - wn10_CC_000325
  tags:
      - WN10-CC-000325
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00229
      - SV-220859r569187_rule
      - V-220859

- name: "MEDIUM | WN10-CC-000326 | PATCH | PowerShell script block logging must be enabled on Windows 10."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging
      value: EnableScriptBlockLogging
      data: 1
      type: dword
  when:
      - wn10_CC_000326
  tags:
      - WN10-CC-000326
      - CAT2
      - CCI-000135
      - SRG-OS-000042-GPOS-00020
      - SV-220860r569187_rule
      - V-220860

- name: "MEDIUM | WN10-CC-000328 | PATCH | The Windows Explorer Preview pane must be disabled for Windows 10."
  ansible.windows.win_regedit:
      path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
      value: "{{ item }}"
      data: 1
      type: dword
  with_items:
      - NoPreviewPane
      - NoReadingPane
  when:
      - wn10_CC_000328
  tags:
      - WN10-CC-000328
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00229
      - SV-220861r569305_rule
      - V-220861

- name: "MEDIUM | WN10-CC-000335 | PATCH | The Windows Remote Management (WinRM) client must not allow unencrypted traffic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
      value: AllowUnencryptedTraffic
      data: 0
      type: dword
  when:
      - wn10_CC_000335
  tags:
      - WN10-CC-000335
      - CAT2
      - CCI-002890
      - CCI-003123
      - SRG-OS-000393-GPOS-00173
      - SV-220863r569187_rule
      - V-220863

- name: "MEDIUM | WN10-CC-000350 | PATCH | The Windows Remote Management (WinRM) service must not allow unencrypted traffic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
      value: AllowUnencryptedTraffic
      data: 0
      type: dword
  when:
      - wn10_CC_000350
  tags:
      - WN10-CC-000350
      - CAT2
      - CCI-002890
      - CCI-003123
      - SRG-OS-000393-GPOS-00173
      - SV-220866r569187_rule
      - V-220866

- name: "MEDIUM | WN10-CC-000355 | PATCH | The Windows Remote Management (WinRM) service must not store RunAs credentials."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
      value: DisableRunAs
      data: 1
      type: dword
  when:
      - wn10_CC_000355
  tags:
      - WN10-CC-000355
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00156
      - SV-220867r569187_rule
      - V-220867

- name: "MEDIUM | WN10-CC-000360 | PATCH | The Windows Remote Management (WinRM) client must not use Digest authentication."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
      value: AllowDigest
      data: 0
      type: dword
  when:
      - wn10_CC_000360
  tags:
      - WN10-CC-000360
      - CAT2
      - CCI-000877
      - SRG-OS-000125-GPOS-00065
      - SV-220868r569187_rule
      - V-220868

# If "Allow voice activation” policy is configured to disallow applications to be activated with voice for all users this control is NA
- name: "MEDIUM | WN10-CC-000365 | PATCH | Windows 10 must be configured to prevent Windows apps from being activated by voice while the system is locked."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy
      value: LetAppsActivateWithVoiceAboveLock
      data: 2
      type: dword
  when:
      - wn10_CC_000365
      - ansible_distribution_version >= "10.0.1903.0"
  tags:
      - WN10-CC-000365
      - CAT2
      - CCI-000056
      - SRG-OS-000028-GPOS-00009
      - SV-220869r569187_rule
      - V-220869

- name: "MEDIUM | WN10-CC-000370 | PATCH | The convenience PIN for Windows 10 must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\Software\Policies\Microsoft\Windows\System
      value: AllowDomainPINLogon
      data: 0
      type: dword
  when:
      - wn10_CC_000370
  tags:
      - WN10-CC-000370
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220870r569187_rule
      - V-220870

- name: "MEDIUM | WN10-CC-000385 | PATCH | Windows Ink Workspace must be configured to disallow access above the lock."
  ansible.windows.win_regedit:
      path: HKLM:\Software\Policies\Microsoft\WindowsInkWorkspace
      value: AllowWindowsInkWorkspace
      data: 1
      type: dword
  when:
      - wn10_CC_000385
  tags:
      - WN10-CC-000385
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-220871r642141_rule
      - V-220871

- name: "MEDIUM | WN10-EP-000310 | PATCH | Windows 10 Kernel (Direct Memory Access) DMA Protection must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\Software\Policies\Microsoft\Windows\Kernel DMA Protection
      value: DeviceEnumerationPolicy
      data: 0
      type: dword
  when:
      - wn10_EP_000310
  tags:
      - WN10-EP-000310
      - CAT2
      - CCI-001090
      - SRG-OS-000138-GPOS-00069
      - SV-220902r569187_rule
      - V-220902

- name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store."
  block:
      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 3."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*DoD Root CA 3*" -and $_.Thumbprint -Like "D73CA91102A2204A36459ED32213B467D7CE97FB"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000005_root_3_Check

      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Warning!! No DOD Root CA 3 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DOD Root CA 3 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
        when: wn10_pk_000005_root_3_Check.stdout == ""

      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 4."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*DoD Root CA 4*" -and $_.Thumbprint -Like "B8269F25DBD937ECAFD4C35A9838571723F2D026"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000005_root_4_Check

      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Warning!! No DOD Root CA 4 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DOD Root CA 4 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
        when: wn10_pk_000005_root_4_Check.stdout == ""

      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Check For DOD Root CA 5."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*DoD Root CA 5*" -and $_.Thumbprint -Like "4ECB5CC3095670454DA1CBD410FC921F46B8564B"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000005_root_5_Check

      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Warning!! No DOD Root CA 5 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DOD Root CA 5 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
        when: wn10_pk_000005_root_5_Check.stdout == ""

      - name: "MEDIUM | WN10-PK-000005 | AUDIT | The DoD Root CA certificates must be installed in the Trusted Root Store. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-PK-000005'
        when:
            - wn10_pk_000005_root_3_Check.stdout == "" or
              wn10_pk_000005_root_4_Check.stdout == "" or
              wn10_pk_000005_root_5_Check.stdout == ""
  when:
      - wn10_PK_000005
  tags:
      - WN10-PK-000005
      - CAT2
      - CCI-002440
      - CCI-000185
      - SRG-OS-000066-GPOS-00034
      - SV-220903r859299_rule
      - V-220903

- name: "MEDIUM | WN10-PK-000010 | PATCH | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems."
  block:
      - name: "MEDIUM | WN10-PK-000010 | PATCH | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Check For ECA Root CA 2."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*ECA Root CA 2*" -and $_.Thumbprint -Like "C313F919A6ED4E0E8451AFA930FB419A20F181E4"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000010_eca_2_check

      - name: "MEDIUM | WN10-PK-000010 | PATCH | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Warning!! No ECA Root CA 2 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The ECA Root CA 2 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
        when: wn10_pk_000010_eca_2_check.stdout == ""

      - name: "MEDIUM | WN10-PK-000010 | PATCH | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Check For ECA Root CA 4."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*ECA Root CA 4*" -and $_.Thumbprint -Like "73E8BB08E337D6A5A6AEF90CFFDD97D9176CB582"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000010_eca_4_check

      - name: "MEDIUM | WN10-PK-000010 | PATCH | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Warning!! No ECA Root CA 4 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The ECA Root CA 4 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
        when: wn10_pk_000010_eca_4_check.stdout == ""

      - name: "MEDIUM | WN10-PK-000010 | PATCH | The External Root CA certificates must be installed in the Trusted Root Store on unclassified systems. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-PK-000010'
        when:
            - wn10_pk_000010_eca_2_check.stdout == "" or
              wn10_pk_000010_eca_4_check.stdout == ""
  when:
      - wn10_PK_000010
  tags:
      - WN10-PK-000010
      - CAT2
      - CCI-000185
      - SRG-OS-000066-GPOS-00034
      - SV-220904r569312_rule
      - V-220904

- name: "MEDIUM | WN10-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems."
  block:
      - name: "MEDIUM | WN10-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | DoD Interoperability Root CA 2 AC Thumb Check."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where {$_.Issuer -Like "*DoD Interoperability*" -and $_.Subject -Like "*DoD*" -and $_.Thumbprint -Like "AC06108CA348CC03B53795C64BF84403C1DBD341"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000015_interop_check_for_ac

      - name: "MEDIUM | WN10-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warning!! No DoD Interoperability Root CA 2 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DoD Root CA 3 - DoD Interoperability Root CA 2 certificate is not installed on the system or"
                - "does not contain Thumbprint AC06108CA348CC03B53795C64BF84403C1DBD341 for the Certificate."
        when: wn10_pk_000015_interop_check_for_ac.stdout == ""

      - name: "MEDIUM | WN10-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | DoD Interoperability Root CA 2 49 Thumb Check."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where {$_.Issuer -Like "*DoD Interoperability*" -and $_.Subject -Like "*DoD*" -and $_.Thumbprint -Like "49CBE933151872E17C8EAE7F0ABA97FB610F6477"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000015_interop_check_for_49

      - name: "MEDIUM | WN10-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warning!! No DoD Interoperability Root CA 2 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DoD Root CA 3 - DoD Interoperability Root CA 2 certificate is not installed on the system or"
                - "does not contain Thumbprint 49CBE933151872E17C8EAE7F0ABA97FB610F6477 for the Certificate."
        when: wn10_pk_000015_interop_check_for_49.stdout == ""

      - name: "MEDIUM | WN10-PK-000015 | PATCH | The DoD Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-PK-000015'
        when:
            - wn10_pk_000015_interop_check_for_ac.stdout == "" or
              wn10_pk_000015_interop_check_for_49.stdout == ""
  when:
      - wn10_PK_000015
  tags:
      - WN10-PK-000015
      - CAT2
      - CCI-000185
      - CCI-002470
      - SRG-OS-000066-GPOS-00034
      - SV-220905r859298_rule
      - V-220905

- name: "MEDIUM | WN10-PK-000020 | PATCH | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems."
  block:
      - name: "MEDIUM | WN10-PK-000020 | PATCH | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | DoD CCEB Interop Check."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where {$_.Issuer -Like "*US DoD CCEB Interoperability Root CA 2*" -and $_.Subject -Like "*DoD Root CA 3*" -and $_.Thumbprint -Like "AF132AC65DE86FC4FB3FE51FD637EBA0FF0B12A9"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn10_pk_000020_cceb_interop_check

      - name: "MEDIUM | WN10-PK-000020 | PATCH | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warning!! No DoD Root CA 3 - US DoD CCEB Interoperability Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DoD Root CA 3 - US DoD CCEB Interoperability Root CA 2 certificate is not installed on the system or"
                - "does not contain Thumbprint AF132AC65DE86FC4FB3FE51FD637EBA0FF0B12A9 for the Certificate."
        when: wn10_pk_000020_cceb_interop_check.stdout == ""

      - name: "MEDIUM | WN10-PK-000020 | PATCH | The US DoD CCEB Interoperability Root CA cross-certificates must be installed in the Untrusted Certificates Store on unclassified systems. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-PK-000020'
        when: wn10_pk_000020_cceb_interop_check.stdout == ""
  when:
      - wn10_PK_000020
  tags:
      - WN10-PK-000020
      - CAT2
      - CCI-002470
      - CCI-000185
      - SRG-OS-000066-GPOS-00034
      - SV-220906r569316_rule
      - V-220906

- name: "MEDIUM | WN10-RG-000005 | PATCH | Default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained."
  ansible.windows.win_shell: echo true
  changed_when: false
  failed_when: false
  when:
      - wn10_RG_000005
  tags:
      - WN10-RG-000005
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220907r569187_rule
      - V-220907

- name: "MEDIUM | WN10-SO-000005 | PATCH | The built-in administrator account must be disabled."
  community.windows.win_security_policy:
      section: System Access
      key: EnableAdminAccount
      value: 0
  when:
      - wn10_SO_000005
      - not win_skip_for_test
  tags:
      - WN10-SO-000005
      - CAT2
      - CCI-000764
      - SRG-OS-000104-GPOS-00051
      - SV-220908r569187_rule
      - V-220908

- name: "MEDIUM | WN10-SO-000010 | PATCH | The built-in guest account must be disabled."
  community.windows.win_security_policy:
      section: System Access
      key: EnableGuestAccount
      value: 0
  when:
      - wn10_SO_000010
  tags:
      - WN10-SO-000010
      - CAT2
      - CCI-000804
      - SRG-OS-000121-GPOS-00062
      - SV-220909r569187_rule
      - V-220909

- name: "MEDIUM | WN10-SO-000015 | PATCH | Local accounts with blank passwords must be restricted to prevent access from the network."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: LimitBlankPasswordUse
      data: 1
      type: dword
  when:
      - wn10_SO_000015
  tags:
      - WN10-SO-000015
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220910r569187_rule
      - V-220910

- name: "MEDIUM | WN10-SO-000020 | PATCH | The built-in administrator account must be renamed."
  block:
      - name: "MEDIUM | WN10-SO-000020 | AUDIT | The built-in administrator account must be renamed. | Warning Msg For Default Variable Not Edited."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have not changed the default admin username in win10stig_new_administrator_name please"
                - "make the necessary change to the variable to be in compliance."
        when: "'adminchangethis' in win10stig_new_administrator_name"

      - name: "MEDIUM | WN10-SO-000020 | AUDIT | The built-in administrator account must be renamed. | Add Warn Count."
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        vars:
            warn_control_id: 'WN10-SO-000020'
        when: "'adminchangethis' in win10stig_new_administrator_name"

      - name: "MEDIUM | WN10-SO-000020 | AUDIT | The built-in administrator account must be renamed. | Change Admin Name."
        community.windows.win_security_policy:
            section: System Access
            key: NewAdministratorName
            value: "{{ win10stig_new_administrator_name }}"
        when: "'adminchangethis' not in win10stig_new_administrator_name"
  when:
      - wn10_SO_000020
  tags:
      - WN10-SO-000020
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220911r569187_rule
      - V-220911

- name: "MEDIUM | WN10-SO-000025 | PATCH | The built-in guest account must be renamed."
  block:
      - name: "MEDIUM | WN10-SO-000025 | AUDIT | The built-in guest account must be renamed. | Warning Msg For Default Variable Not Edited."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have not changed the default guest name in win10stig_new_guest_name please"
                - "make the necessary change to the variable to be in compliance."
        when: "'guestchangethis' in win10stig_new_guest_name"

      - name: "MEDIUM | WN10-SO-000025 | AUDIT | The built-in guest account must be renamed. | Add Warn Count."
        ansible.builtin.import_tasks:
            file: warning_facts.yml
        vars:
            warn_control_id: 'WN10-SO-000025'
        when: "'guestchangethis' in win10stig_new_guest_name"

      - name: "MEDIUM | WN10-SO-000025 | AUDIT | The built-in guest account must be renamed. | Change Guest Name."
        community.windows.win_security_policy:
            section: System Access
            key: NewGuestName
            value: "{{ win10stig_new_guest_name }}"
        when: "'guestchangethis' not in win10stig_new_guest_name"
  when:
      - wn10_SO_000025
  tags:
      - WN10-SO-000025
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220912r569187_rule
      - V-220912

- name: "MEDIUM | WN10-SO-000030 | PATCH | Audit policy using subcategories must be enabled"
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: SCENoApplyLegacyAuditPolicy
      data: 1
      type: dword
  when:
      - wn10_SO_000030
  tags:
      - WN10-SO-000030
      - CAT2
      - CCI-000169
      - SRG-OS-000062-GPOS-00031
      - SV-220913r569187_rule
      - V-220913

- name: "MEDIUM | WN10-SO-000035 | PATCH | Outgoing secure channel traffic must be encrypted or signed."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RequireSignOrSeal
      data: 1
      type: dword
  when:
      - wn10_SO_000035
  tags:
      - WN10-SO-000035
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-220914r569187_rule
      - V-220914

- name: "MEDIUM | WN10-SO-000040 | PATCH | Outgoing secure channel traffic must be encrypted when possible."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: SealSecureChannel
      data: 1
      type: dword
  when:
      - wn10_SO_000040
  tags:
      - WN10-SO-000040
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-220915r569187_rule
      - V-220915

- name: "MEDIUM | WN10-SO-000045 | PATCH | Outgoing secure channel traffic must be signed when possible."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: SignSecureChannel
      data: 1
      type: dword
  when:
      - wn10_SO_000045
  tags:
      - WN10-SO-000045
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-220916r569187_rule
      - V-220916

- name: "MEDIUM | WN10-SO-000060 | PATCH | The system must be configured to require a strong session key."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RequireStrongKey
      data: 1
      type: dword
  when:
      - wn10_SO_000060
  tags:
      - WN10-SO-000060
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-220919r569187_rule
      - V-220919

- name: "MEDIUM | WN10-SO-000070 | PATCH | The machine inactivity limit must be set to 15 minutes, locking the system with the screensaver."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: InactivityTimeoutSecs
      data: "{{ win10stig_inactivity_timeout }}"
      type: dword
  when:
      - wn10_SO_000070
  tags:
      - WN10-SO-000070
      - CAT2
      - CCI-000057
      - SRG-OS-000029-GPOS-00010
      - SV-220920r569187_rule
      - V-220920

- name: "MEDIUM | WN10-SO-000075 | PATCH | The required legal notice must be configured to display before console logon."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: LegalNoticeText
      data: "{{ win10stig_legalnotice }}"
      type: string
  when:
      - wn10_SO_000075
  tags:
      - WN10-SO-000075
      - CAT2
      - CCI-000048
      - CCI-000050
      - CCI-001384
      - CCI-001385
      - CCI-001386
      - CCI-001387
      - CCI-001388
      - SRG-OS-000023-GPOS-00006
      - SV-220921r569187_rule
      - V-220921

- name: "MEDIUM | WN10-SO-000095 | PATCH | The Smart Card removal option must be configured to Force Logoff or Lock Workstation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon
      value: SCRemoveOption
      data: "{{ win10stig_smartcard_remove_action }}"
      type: string
  when:
      - wn10_SO_000095
  tags:
      - WN10-SO-000095
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220924r569187_rule
      - V-220924

- name: "MEDIUM | WN10-SO-000100 | PATCH | The Windows SMB client must be configured to always perform SMB packet signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: RequireSecuritySignature
      data: 1
      type: dword
  when:
      - wn10_SO_000100
  tags:
      - WN10-SO-000100
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-220925r569187_rule
      - V-220925

- name: "MEDIUM | WN10-SO-000110 | PATCH | Unencrypted passwords must not be sent to third-party SMB Servers."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: EnablePlainTextPassword
      data: 0
      type: dword
  when:
      - wn10_SO_000110
  tags:
      - WN10-SO-000110
      - CAT2
      - CCI-000197
      - SRG-OS-000074-GPOS-00042
      - SV-220926r569187_rule
      - V-220926

- name: "MEDIUM | WN10-SO-000120 | PATCH | The Windows SMB server must be configured to always perform SMB packet signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
      value: RequireSecuritySignature
      data: 1
      type: dword
  when:
      - wn10_SO_000120
  tags:
      - WN10-SO-000120
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-220927r569187_rule
      - V-220927

- name: |
    "MEDIUM | WN10-SO-000160 | PATCH | The system must be configured to prevent anonymous users from having the same rights as the Everyone group."
    "MEDIUM | WN10-00-000095 | PATCH | Permissions for system files and directories must conform to minimum requirements."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: EveryoneIncludesAnonymous
      data: 0
      type: dword
  when:
      - wn10_SO_000160 or
        wn10_00_000095
  tags:
      - WN10-SO-000160
      - WN10-00-000095
      - CAT2
      - CCI-000366
      - CCI-002165
      - SRG-OS-000480-GPOS-00227
      - SRG-OS-000312-GPOS-00122
      - SV-220931r569187_rule
      - SV-220717r569187_rule
      - V-220931
      - V-220717

- name: "MEDIUM | WN10-SO-000167 | PATCH | Remote calls to the Security Account Manager (SAM) must be restricted to Administrators."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: RestrictRemoteSAM
      data: O:BAG:BAD:(A;;RC;;;BA)
      type: string
  when:
      - wn10_SO_000167
  tags:
      - WN10-SO-000167
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220933r569187_rule
      - V-220933

- name: "MEDIUM | WN10-SO-000180 | PATCH | NTLM must be prevented from falling back to a Null session."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\LSA\MSV1_0
      value: allownullsessionfallback
      data: 0
      type: dword
  when:
      - wn10_SO_000180
  tags:
      - WN10-SO-000180
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220934r569187_rule
      - V-220934

- name: "MEDIUM | WN10-SO-000185 | PATCH | PKU2U authentication using online identities must be prevented."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\LSA\pku2u
      value: AllowOnlineID
      data: 0
      type: dword
  when:
      - wn10_SO_000185
  tags:
      - WN10-SO-000185
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220935r569187_rule
      - V-220935

- name: "MEDIUM | WN10-SO-000190 | PATCH | Kerberos encryption types must be configured to prevent the use of DES and RC4 encryption suites."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters
      value: SupportedEncryptionTypes
      data: 2147483640
      type: dword
  when:
      - wn10_SO_000190
  tags:
      - WN10-SO-000190
      - CAT2
      - CCI-000803
      - SRG-OS-000120-GPOS-00061
      - SV-220936r569187_rule
      - V-220936

- name: "MEDIUM | WN10-SO-000210 | PATCH | The system must be configured to the required LDAP client signing level."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LDAP
      value: LDAPClientIntegrity
      data: 1
      type: dword
  when:
      - wn10_SO_000210
  tags:
      - WN10-SO-000210
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220939r569187_rule
      - V-220939

- name: "MEDIUM | WN10-SO-000215 | PATCH | The system must be configured to meet the minimum session security requirement for NTLM SSP based clients."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: NTLMMinClientSec
      data: 537395200
      type: dword
  when:
      - wn10_SO_000215
  tags:
      - WN10-SO-000215
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220940r569187_rule
      - V-220940

- name: "MEDIUM | WN10-SO-000220 | PATCH | The system must be configured to meet the minimum session security requirement for NTLM SSP based servers."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: NTLMMinServerSec
      data: 537395200
      type: dword
  when:
      - wn10_SO_000220
  tags:
      - WN10-SO-000220
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220941r569187_rule
      - V-220941

- name: "MEDIUM | WN10-SO-000230 | PATCH | The system must be configured to use FIPS-compliant algorithms for encryption, hashing, and signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\FIPSAlgorithmPolicy
      value: Enabled
      data: 1
      type: dword
  when:
      - wn10_SO_000230
  tags:
      - WN10-SO-000230
      - CAT2
      - CCI-002450
      - SRG-OS-000478-GPOS-00223
      - SV-220942r569187_rule
      - V-220942

- name: "MEDIUM | WN10-SO-000245 | PATCH | User Account Control approval mode for the built-in Administrator must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: FilterAdministratorToken
      data: 1
      type: dword
  when:
      - wn10_SO_000245
  tags:
      - WN10-SO-000245
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-220944r569187_rule
      - V-220944

- name: "MEDIUM | WN10-SO-000250 | PATCH | User Account Control must, at minimum, prompt administrators for consent on the secure desktop."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: ConsentPromptBehaviorAdmin
      data: 2
      type: dword
  when:
      - wn10_SO_000250
  tags:
      - WN10-SO-000250
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-220945r569187_rule
      - V-220945

- name: "MEDIUM | WN10-SO-000251 | PATCH | Windows 10 must use multifactor authentication for local and network access to privileged and non-privileged accounts."
  block:
      - name: "MEDIUM | WN10-SO-000251 | PATCH | Windows 10 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Warning Message."
        ansible.builtin.debug:
            msg: "Warning!! You are not on a domain which means you should configure Windows Hello for sign on options would be suggested based on the organizations needs and capabilities."

      - name: "MEDIUM | WN10-SO-000251 | PATCH | Windows 10 must use multifactor authentication for local and network access to privileged and non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN10-00-000040'
  when:
      - wn10_SO_000251
      - not ansible_windows_domain_member
  tags:
      - WN10-SO-000251
      - CAT2
      - CCI-000765
      - SRG-OS-000105-GPOS-00052
      - SV-220946r819676_rule
      - V-220946

- name: "MEDIUM | WN10-SO-000255 | PATCH | User Account Control must automatically deny elevation requests for standard users."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: ConsentPromptBehaviorUser
      data: 0
      type: dword
  when:
      - wn10_SO_000255
  tags:
      - WN10-SO-000255
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-220947r569187_rule
      - V-220947

- name: "MEDIUM | WN10-SO-000260 | PATCH | User Account Control must be configured to detect application installations and prompt for elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableInstallerDetection
      data: 1
      type: dword
  when:
      - wn10_SO_000260
  tags:
      - WN10-SO-000260
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-220948r569187_rule
      - V-220948

- name: "MEDIUM | WN10-SO-000265 | PATCH | User Account Control must only elevate UIAccess applications that are installed in secure locations."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableSecureUIAPaths
      data: 1
      type: dword
  when:
      - wn10_SO_000265
  tags:
      - WN10-SO-000265
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-220949r569187_rule
      - V-220949

- name: "MEDIUM | WN10-SO-000270 | PATCH | User Account Control must run all administrators in Admin Approval Mode, enabling UAC."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableLUA
      data: 1
      type: dword
  when:
      - wn10_SO_000270
  tags:
      - WN10-SO-000270
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-220950r569187_rule
      - V-220950

- name: "MEDIUM | WN10-SO-000275 | PATCH | User Account Control must virtualize file and registry write failures to per-user locations."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableVirtualization
      data: 1
      type: dword
  when:
      - wn10_SO_000275
  tags:
      - WN10-SO-000275
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-220951r569187_rule
      - V-220951

- name: "MEDIUM | WN10-SO-000280 | PATCH | Passwords for enabled local Administrator accounts must be changed at least every 60 days."
  community.windows.win_security_policy:
      section: System Access
      key: MaximumPasswordAge
      value: "{{ win10stig_max_pass_age }}"
  when:
      - wn10_SO_000280
  tags:
      - WN10-SO-000280
      - CAT2
      - CCI-000199
      - SRG-OS-000076-GPOS-00044
      - SV-220952r793301_rule
      - V-220952

- name: "MEDIUM | WN10-UC-000020 | PATCH | Zone information must be preserved when saving attachments."
  ansible.windows.win_regedit:
      path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Attachments
      value: SaveZoneInformation
      data: 2
      type: dword
  when:
      - wn10_UC_000020
  tags:
      - WN10-UC-000020
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-220955r569187_rule
      - V-220955

- name: "MEDIUM | WN10-UR-000005 | PATCH | The Access Credential Manager as a trusted caller user right must not be assigned to any groups or accounts."
  ansible.windows.win_user_right:
      name: SeTrustedCredManAccessPrivilege
      users: []
  when:
      - wn10_UR_000005
  tags:
      - WN10-UR-000005
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220956r569187_rule
      - V-220956

- name: "MEDIUM | WN10-UR-000010 | PATCH | The Access this computer from the network user right must only be assigned to the Administrators and Remote Desktop Users groups."
  ansible.windows.win_user_right:
      name: SeNetworkLogonRight
      action: set
      users:
          - Administrators
          - Remote Desktop Users
  when:
      - wn10_UR_000010
  tags:
      - WN10-UR-000010
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-220957r569187_rule
      - V-220957

- name: "MEDIUM | WN10-UR-000025 | PATCH | The Allow log on locally user right must only be assigned to the Administrators and Users groups."
  ansible.windows.win_user_right:
      name: SeInteractiveLogonRight
      action: set
      users:
          - Administrators
          - Users
  when:
      - wn10_UR_000025
  tags:
      - WN10-UR-000025
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-220959r569187_rule
      - V-220959

- name: "MEDIUM | WN10-UR-000030 | PATCH | The Back up files and directories user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeBackupPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000030
  tags:
      - WN10-UR-000030
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220960r569187_rule
      - V-220960

- name: "MEDIUM | WN10-UR-000035 | PATCH | The Change the system time user right must only be assigned to Administrators and Local Service and NT SERVICE\autotimesvc."
  block:
      - name: "MEDIUM | WN10-UR-000035 | PATCH | The Change the system time user right must only be assigned to Administrators and Local Service and NT SERVICE\autotimesvc. | Set for Win 10 v1909 and newer"
        ansible.windows.win_user_right:
            name: SeSystemtimePrivilege
            action: set
            users:
                - Administrators
                - LOCAL SERVICE
                - NT SERVICE\autotimesvc
        when: ansible_distribution_version >= "10.0.1909.0"

      - name: "MEDIUM | WN10-UR-000035 | PATCH | The Change the system time user right must only be assigned to Administrators and Local Service and NT SERVICE\autotimesvc."
        ansible.windows.win_user_right:
            name: SeSystemtimePrivilege
            action: set
            users:
                - Administrators
                - LOCAL SERVICE
        when: ansible_distribution_version < "10.0.1909.0"
  when:
      - wn10_UR_000035
  tags:
      - WN10-UR-000035
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220961r569187_rule
      - V-220961

- name: "MEDIUM | WN10-UR-000040 | PATCH | The Create a pagefile user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeCreatePagefilePrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000040
  tags:
      - WN10-UR-000040
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220962r569187_rule
      - V-220962

- name: "MEDIUM | WN10-UR-000050 | PATCH | The Create global objects user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  ansible.windows.win_user_right:
      name: SeCreateGlobalPrivilege
      action: set
      users:
          - Administrators
          - LOCAL SERVICE
          - NETWORK SERVICE
          - SERVICE
  when:
      - wn10_UR_000050
  tags:
      - WN10-UR-000050
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220964r569187_rule
      - V-220964

- name: "MEDIUM | WN10-UR-000055 | PATCH | The Create permanent shared objects user right must not be assigned to any groups or accounts."
  ansible.windows.win_user_right:
      name: SeCreatePermanentPrivilege
      users: []
  when:
      - wn10_UR_000055
  tags:
      - WN10-UR-000055
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220965r569187_rule
      - V-220965

- name: "MEDIUM | WN10-UR-000060 | PATCH | The Create symbolic links user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeCreateSymbolicLinkPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000060
  tags:
      - WN10-UR-000060
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220966r569187_rule
      - V-220966

- name: "MEDIUM | WN10-UR-000070 | PATCH | The Deny access to this computer from the network user right on workstations must be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN10-UR-000070 | PATCH | The Deny access to this computer from the network user right on workstations must be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Domain member systems"
        ansible.windows.win_user_right:
            name: SeDenyNetworkLogonRight
            action: set
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
                - Local account
        when: ansible_windows_domain_member

      - name: "MEDIUM | WN10-UR-000070 | PATCH | The Deny access to this computer from the network user right on workstations must be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Non-Domain systems"
        ansible.windows.win_user_right:
            name: SeDenyNetworkLogonRight
            users: Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn10_UR_000070
  tags:
      - WN10-UR-000070
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-220968r569187_rule
      - V-220968

- name: "MEDIUM | WN10-UR-000075 | PATCH | The Deny log on as a batch job user right on domain-joined workstations must be configured to prevent access from highly privileged domain accounts."
  ansible.windows.win_user_right:
      name: SeDenyBatchLogonRight
      action: set
      users:
          - Enterprise Admin
          - Domain Admin
  when:
      - wn10_UR_000075
      - ansible_windows_domain_member
  tags:
      - WN10-UR-000075
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-220969r857200_rule
      - V-220969

- name: "MEDIUM | WN10-UR-000080 | PATCH | The Deny log on as a service user right on Windows 10 domain-joined workstations must be configured to prevent access from highly privileged domain accounts."
  ansible.windows.win_user_right:
      name: SeDenyServiceLogonRight
      users:
          - Enterprise Admin
          - Domain Admin
      action: set
  when:
      - wn10_UR_000080
      - ansible_windows_domain_member
  tags:
      - WN10-UR-000080
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-220970r857203_rule
      - V-220970

- name: "MEDIM | WN10-UR-000085 | PATCH | The Deny log on locally user right on workstations must be configured to prevent access from highly privileged domain accounts on domain systems and unauthenticated access on all systems."
  block:
      - name: "MEDIM | WN10-UR-000085 | PATCH | The Deny log on locally user right on workstations must be configured to prevent access from highly privileged domain accounts on domain systems and unauthenticated access on all systems. | Domain member systems"
        ansible.windows.win_user_right:
            name: SeDenyInteractiveLogonRight
            action: set
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
        when: ansible_windows_domain_member

      - name: "MEDIM | WN10-UR-000085 | PATCH | The Deny log on locally user right on workstations must be configured to prevent access from highly privileged domain accounts on domain systems and unauthenticated access on all systems. | Non-Domain systems"
        ansible.windows.win_user_right:
            name: SeDenyInteractiveLogonRight
            users: Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn10_UR_000085
  tags:
      - WN10-UR-000085
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-220971r569187_rule
      - V-220971

- name: "MEDIUM | WN10-UR-000090 | PATCH | The Deny log on through Remote Desktop Services user right on Windows 10 workstations must at a minimum be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN10-UR-000090 | PATCH | The Deny log on through Remote Desktop Services user right on Windows 10 workstations must at a minimum be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Domain memeber systems"
        ansible.windows.win_user_right:
            name: SeDenyRemoteInteractiveLogonRight
            action: set
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
                - Local account
        when: ansible_windows_domain_member

      - name: "MEDIUM | WN10-UR-000090 | PATCH | The Deny log on through Remote Desktop Services user right on Windows 10 workstations must at a minimum be configured to prevent access from highly privileged domain accounts and local accounts on domain systems and unauthenticated access on all systems. | Non-Domain systems"
        ansible.windows.win_user_right:
            name: SeDenyRemoteInteractiveLogonRight
            users: Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn10_UR_000090
  tags:
      - WN10-UR-000090
      - CAT2
      - CCI-000213
      - CCI-002314
      - SRG-OS-000080-GPOS-00048
      - SV-220972r569187_rule
      - V-220972

- name: "MEDIUM | WN10-UR-000095 | PATCH | The Enable computer and user accounts to be trusted for delegation user right must not be assigned to any groups or accounts."
  ansible.windows.win_user_right:
      name: SeEnableDelegationPrivilege
      users: []
  when:
      - wn10_UR_000095
  tags:
      - WN10-UR-000095
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220973r569187_rule
      - V-220973

- name: "MEDIUM | WN10-UR-000100 | PATCH | The Force shutdown from a remote system user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeRemoteShutdownPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000100
  tags:
      - WN10-UR-000100
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220974r569187_rule
      - V-220974

- name: "MEDIUM | WN10-UR-000110 | PATCH | The Impersonate a client after authentication user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  ansible.windows.win_user_right:
      name: SeImpersonatePrivilege
      action: set
      users:
          - Administrators
          - LOCAL SERVICE
          - NETWORK SERVICE
          - SERVICE
  when:
      - wn10_UR_000110
  tags:
      - WN10-UR-000110
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220975r569187_rule
      - V-220975

- name: "MEDIUM | WN10-UR-000120 | PATCH | The Load and unload device drivers user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeLoadDriverPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000120
  tags:
      - WN10-UR-000120
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220976r569187_rule
      - V-220976

- name: "MEDIUM | WN10-UR-000125 | PATCH | The Lock pages in memory user right must not be assigned to any groups or accounts."
  ansible.windows.win_user_right:
      name: SeLockMemoryPrivilege
      action: set
      users: []
  when:
      - wn10_UR_000125
  tags:
      - WN10-UR-000125
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220977r569187_rule
      - V-220977

- name: "MEDIUM | WN10-UR-000130 | PATCH | The Manage auditing and security log user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeSecurityPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000130
  tags:
      - WN10-UR-000130
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - CCI-000171
      - CCI-001914
      - SRG-OS-000057-GPOS-00027
      - SV-220978r569187_rule
      - V-220978

- name: "MEDIUM | WN10-UR-000140 | PATCH | The Modify firmware environment values user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeSystemEnvironmentPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000140
  tags:
      - WN10-UR-000140
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220979r569187_rule
      - V-220979

- name: "MEDIUM | WN10-UR-000145 | PATCH | The Perform volume maintenance tasks user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeManageVolumePrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000145
  tags:
      - WN10-UR-000145
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220980r569187_rule
      - V-220980

- name: "MEDIUM | WN10-UR-000150 | PATCH | The Profile single process user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeProfileSingleProcessPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000150
  tags:
      - WN10-UR-000150
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220981r569187_rule
      - V-220981

- name: "MEDIUM | WN10-UR-000160 | PATCH | The Restore files and directories user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeRestorePrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000160
  tags:
      - WN10-UR-000160
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220982r569187_rule
      - V-220982

- name: "MEDIUM | WN10-UR-000165 | PATCH | The Take ownership of files or other objects user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeTakeOwnershipPrivilege
      users: Administrators
      action: set
  when:
      - wn10_UR_000165
  tags:
      - WN10-UR-000165
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-220983r569187_rule
      - V-220983

- name: "MEDIUM | WN10-CC-000327 | PATCH | PowerShell Transcription must be enabled on Windows 10."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\Transcription
      value: EnableTranscripting
      data: 1
      type: dword
  when:
      - wn10_CC_000327
  tags:
      - WN10-CC-000327
      - CAT2
      - CCI-000132
      - CCI-000134
      - SRG-OS-000041-GPOS-00019
      - SV-252896r821863_rule
      - V-252896
